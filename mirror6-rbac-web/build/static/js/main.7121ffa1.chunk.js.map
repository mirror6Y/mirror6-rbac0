{"version":3,"sources":["assets/images/log.jpg","utils/storageUtil.js","api/ajax.js","api/api.js","utils/memoryUtil.js","pages/login/login.jsx","config/menuConfig.jsx","components/nav/nav.jsx","components/button/button.jsx","utils/dateUtil.js","components/header/header.jsx","pages/home/home.jsx","pages/system/user/userAdd.jsx","pages/system/user/userEdit.jsx","pages/system/user/userModal.jsx","pages/system/user/user.jsx","pages/system/role/roleAdd.jsx","pages/system/role/role.jsx","pages/system/auth/authModal.jsx","pages/system/auth/auth.jsx","config/privateRoute.jsx","pages/index/index.jsx","App.js","index.js"],"names":["USER_KEY","Token","user","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","token","ajax","url","data","type","Promise","resolve","reject","axios","method","params","headers","storageUtil","post","then","response","catch","error","message","msg","console","log","reqLogin","reqWeather","cityCode","jsonp","status","lives","length","weather","reporttime","reqUserList","reqUserAdd","reqUserDelete","reqUserEdit","reqRoleList","reqRoleTree","reqRoleAdd","reqMenuList","reqMenuTree","reqMenuAdd","reqMenuDelete","reqMenuEdit","login","formRef","React","createRef","onFinish","values","a","result","code","success","userToken","jwt_decode","user1","props","history","replace","onFinishFailed","errorInfo","className","ref","this","name","initialValues","remember","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","href","htmlType","Component","menuList","title","key","icon","DashboardOutlined","SettingOutlined","children","TeamOutlined","TableOutlined","Loading3QuartersOutlined","SubMenu","Menu","Nav","state","collapsed","getMenuNodes_map","map","item","to","getMenuNodes_reduce","path","location","pathname","reduce","pre","find","cItem","openKey","push","menuNodes","selectedKeys","defaultOpenKeys","mode","theme","withRouter","LinkButton","formatDate","time","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","parseDate","Header","currentTime","getTime","interval","setInterval","setState","getWeather","getTitle","forEach","indexOf","logout","Modal","confirm","ExclamationCircleOutlined","content","onOk","memoryUtil","onCancel","clearInterval","onClick","Home","FormItem","Form","formItemLayout","labelCol","span","wrapperCol","UserModal","treeData","current","getFieldsValue","handleOk","getTreeData","treeFormat","index","id","childList","visible","modalStatus","currentItem","okText","cancelText","bind","label","hidden","pattern","RegExp","Group","value","allowClear","treeCheckable","roleIds","Option","Select","RangePicker","DatePicker","User","initColumn","columns","render","text","record","pagination","pageSize","dataIndex","checkedChildren","unCheckedChildren","checked","defaultChecked","onChange","obj","showEdit","deleteUser","getUserList","pageNum","records","list","total","search","gmtCreate","startTime","_d","endTime","onTableChange","page","enabled","notification","duration","description","handleCancel","modalIsVisible","showAdd","editData","addUser","editUser","QuestionCircleOutlined","ids","Array","deleteBatch","selectedRowKeys","resetSearch","resetFields","userList","pageSizeOptions","showQuickJumper","showSizeChanger","rowSelection","style","marginBottom","gutter","disabled","rowKey","dataSource","marginTop","RoleAdd","toggleVisible","validateFields","addRole","onRefresh","Role","roleList","showStatus","getRoleList","MenuModal","deleteMenu","getMenuList","addMenu","editMenu","handleEdit","editChild","editRef","PrivateRoute","component","rest","rol","res","Footer","Layout","Sider","Content","height","margin","backgroundColor","textAlign","moment","locale","App","zhCN","Login","Index","ReactDOM","document","getElementById"],"mappings":"6fAAe,I,iBCGTA,EAAW,OACXC,EAAM,QAEG,WACHC,GACJC,aAAaC,QAAQJ,EAAUK,KAAKC,UAAUJ,KAFvC,aAMP,OAAOG,KAAKE,MAAMJ,aAAaK,QAAQR,KANhC,aAUPG,aAAaM,WAAWT,IAVjB,WAcFU,GACFP,aAAaC,QAAQH,EAAOS,IAfxB,aAmBH,OAAOP,aAAaK,QAAQP,ICrBzB,SAASU,EAAKC,EAAKC,EAAMC,GAGpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,IACZ,QAATH,EACUI,IAAM,CACZC,OAAQ,MACRP,IAAKA,EACLQ,OAAQP,EACRQ,QAAS,CAAE,cAAiBC,EAAqB,YAErC,SAATR,EACGI,IAAM,CACZC,OAAQ,OACRP,IAAKA,EACLC,KAAMA,EACNQ,QAAS,CAAE,cAAiBC,EAAqB,YAErC,WAATR,EACGI,IAAM,CACZC,OAAQ,SACRP,IAAKA,EACLC,KAAMA,EACNQ,QAAS,CAAE,cAAiBC,EAAqB,YAErC,QAATR,EACGI,IAAM,CACZC,OAAQ,MACRP,IAAKA,EACLC,KAAMA,EACNQ,QAAS,CAAE,cAAiBC,EAAqB,YAG3CJ,IAAMK,KAAKX,EAAKC,IAGtBW,MAAK,SAAAC,GACTT,EAAQS,EAASZ,SAClBa,OAAM,SAAAC,GACLV,EAAOU,GACPC,IAAQD,MAAM,iCAAUA,EAAME,KAC9BC,QAAQC,IAAIJ,EAAME,W,sBCzCjBG,EAAW,SAACnB,GAAD,OAAUF,EAAK,aAAcE,EAAM,OAG9CoB,EAAa,SAACC,GACvB,OAAO,IAAInB,SAAQ,SAACC,EAASC,GACzB,IAAML,EAAG,+DAA2DsB,EAA3D,yCACTC,IAAMvB,EAAK,IAAI,SAACe,EAAOd,GACnB,IAAKc,GAAyB,MAAhBd,EAAKuB,QAAkBvB,EAAKwB,MAAMC,OAAS,EAAG,CAAC,IAAD,EACxBzB,EAAKwB,MAAM,GAAnCE,EADgD,EAChDA,QAASC,EADuC,EACvCA,WACjBxB,EAAQ,CAAEuB,UAASC,oBAEnBV,QAAQC,IAAI,2DASfU,EAAc,SAAC5B,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,QAG3D6B,EAAa,SAAC7B,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,SAG1D8B,EAAgB,SAAC9B,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,WAG7D+B,EAAc,SAAC/B,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,QAY3DgC,EAAc,SAAChC,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,QAG3DiC,EAAc,kBAAMnC,EAAK,+BAAgC,KAAM,QAG/DoC,EAAa,SAAClC,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,SAO1DmC,EAAc,SAACnC,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,QAG3DoC,EAAc,kBAAMtC,EAAK,+BAAgC,KAAM,QAG/DuC,EAAa,SAACrC,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,SAG1DsC,EAAgB,SAACtC,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,WAG7DuC,EAAc,SAACvC,GAAD,OAAUF,EAAK,uBAAwBE,EAAM,QCtEzD,GACXX,KAAM,I,OC8GKmD,E,4MA/FXC,QAAUC,IAAMC,Y,EAEhBC,S,uCAAW,WAAMC,GAAN,qBAAAC,EAAA,6DACP7B,QAAQC,IAAI2B,GADL,SAGc1B,EAAS0B,GAHvB,OAIa,OADdE,EAHC,QAIIC,MAEPjC,IAAQkC,QAAQ,4BACVC,EAAYH,EAAO/C,KACrBX,EAAK8D,YAAWD,GAEpBzC,EAAoBpB,GACpBoB,EAAqByC,GACjBE,EAAM3C,IACVQ,QAAQC,IAAI,0BAAW1B,KAAKC,UAAU2D,IACtC,EAAKC,MAAMC,QAAQC,QAAQ,MAE3BxC,IAAQD,MAAM,4BAhBX,2C,wDAuBX0C,eAAiB,SAAAC,GACbxC,QAAQC,IAAI,UAAWuC,I,4CAE3B,WAMI,OACI,sBAAKC,UAAU,QAAf,UACI,wBAAQA,UAAU,eAAlB,SACI,gDAEJ,0BAASA,UAAU,gBAAnB,UACI,0DACA,eAAC,IAAD,CACIC,IAAKC,KAAKnB,QACVoB,KAAK,eACLH,UAAU,aACVI,cAAe,CACXC,UAAU,GAEdnB,SAAUgB,KAAKhB,SACfY,eAAgBI,KAAKJ,eARzB,UAUI,cAAC,IAAKQ,KAAN,CACIH,KAAK,WACLI,MAAO,CACH,CACIC,UAAU,EACVnD,QAAS,oCALrB,SASI,cAAC,IAAD,CAAOoD,OAAQ,cAACC,EAAA,EAAD,CAAcV,UAAU,wBAA0BW,YAAY,mBAEjF,cAAC,IAAKL,KAAN,CACIH,KAAK,WACLI,MAAO,CACH,CACIC,UAAU,EACVnD,QAAS,oCALrB,SASI,cAAC,IAAD,CACIoD,OAAQ,cAACG,EAAA,EAAD,CAAcZ,UAAU,wBAChCzD,KAAK,WACLoE,YAAY,mBAGpB,eAAC,IAAKL,KAAN,WACI,cAAC,IAAKA,KAAN,CAAWH,KAAK,WAAWU,cAAc,UAAUC,SAAO,EAA1D,SACI,cAAC,IAAD,mCAGJ,mBAAGd,UAAU,oBAAoBe,KAAK,GAAtC,yCAGJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAQ/D,KAAK,UAAUyE,SAAS,SAAShB,UAAU,oBAAnD,yC,GAxFRiB,a,8ECkDLC,GArDE,CACb,CACIC,MAAO,eACPC,IAAK,QACL/E,IAAK,QACLgF,KAAM,cAACC,GAAA,EAAD,KAEV,CACIH,MAAO,2BACPC,IAAK,UACLC,KAAM,cAACE,GAAA,EAAD,IACNC,SAAU,CACN,CACIL,MAAO,2BACPC,IAAK,eACL/E,IAAK,eACLgF,KAAM,cAACX,EAAA,EAAD,KAEV,CACIS,MAAO,2BACPC,IAAK,eACL/E,IAAK,eACLgF,KAAM,cAACI,GAAA,EAAD,KAEV,CACIN,MAAO,2BACPC,IAAK,eACL/E,IAAK,eACLgF,KAAM,cAACI,GAAA,EAAD,OAIlB,CACIN,MAAO,2BACPC,IAAK,QACLC,KAAM,cAACK,GAAA,EAAD,IACNF,SAAU,CACN,CACIL,MAAO,2BACPC,IAAK,UACL/E,IAAK,iBACLgF,KAAM,cAACM,GAAA,EAAD,KAEV,CACIR,MAAO,2BACPC,IAAK,UACL/E,IAAK,iBACLgF,KAAM,cAACM,GAAA,EAAD,QClDdC,GAAYC,KAAZD,QACFE,G,4MAEFC,MAAQ,CACJC,WAAW,G,EAIfC,iBAAmB,SAACf,GAChB,OAAOA,EAASgB,KAAI,SAAAC,GAChB,OAAKA,EAAKX,SASF,cAACI,GAAD,CAAwBP,KAAMc,EAAKd,KAAMF,MAAOgB,EAAKhB,MAArD,SACK,EAAKc,iBAAiBE,EAAKX,WADlBW,EAAKf,KAPnB,eAAC,KAAKd,KAAN,WACK6B,EAAKd,KACN,cAAC,IAAD,CAAMe,GAAID,EAAK9F,IAAf,SAAqB8F,EAAKhB,UAFdgB,EAAKf,S,EAiBrCiB,oBAAsB,SAACnB,GAEnB,IAAMoB,EAAO,EAAK3C,MAAM4C,SAASC,SAEjC,OAAOtB,EAASuB,QAAO,SAACC,EAAKP,GAGpBA,EAAKX,UAWQW,EAAKX,SAASmB,MAAK,SAAAC,GAAK,OAAIA,EAAMxB,MAAQkB,OAGpD,EAAKO,QAAUV,EAAKf,KAExBsB,EAAII,KAEI,cAAClB,GAAD,CAAwBP,KAAMc,EAAKd,KAAMF,MAAOgB,EAAKhB,MAArD,SACK,EAAKc,iBAAiBE,EAAKX,WADlBW,EAAKf,OAjB3BsB,EAAII,KAEI,eAAC,KAAKxC,KAAN,WACK6B,EAAKd,KACN,cAAC,IAAD,CAAMe,GAAID,EAAK9F,IAAf,SAAqB8F,EAAKhB,UAFdgB,EAAKf,MAqBjC,OAAOsB,IACR,K,wDAGP,WACIxC,KAAK6C,UAAY7C,KAAKmC,oBAAoBnB,M,oBAG9C,WACI,IAAMoB,EAAOpC,KAAKP,MAAM4C,SAASC,SAC3BK,EAAU3C,KAAK2C,QAErB,OACI,8BACI,sBAAK7C,UAAU,MAAf,UACI,cAAC,IAAD,CAAMoC,GAAG,QAAQpC,UAAU,aAA3B,SACI,wCAGJ,cAAC,KAAD,CACIgD,aAAc,CAACV,GACfW,gBAAiB,CAACJ,GAClBK,KAAK,SACLC,MAAM,OAJV,SAOQjD,KAAK6C,qB,GArFf9B,aAkGHmC,eAAWtB,I,oCCvGX,SAASuB,GAAW1D,GAC/B,OAAO,oDAAYA,GAAZ,IAAmBK,UAAU,iBCJjC,SAASsD,GAAWC,GACvB,IAAKA,EAAQ,MAAO,GACpB,IAAIC,EAAM,IAAIC,KAAKF,GAOnB,OANWC,EAAIE,cAMD,KALFF,EAAIG,WAAa,GAKD,IAJjBH,EAAII,UAI0B,IAH9BJ,EAAIK,WAGuC,IAFzCL,EAAIM,aAEoD,IADxDN,EAAIO,aAId,SAASC,GAAUR,GACtB,OAAKA,EACMA,EAAIE,cAMD,KALFF,EAAIG,WAAa,GAKD,IAJjBH,EAAII,UAI0B,IAH9BJ,EAAIK,WAGuC,IAFzCL,EAAIM,aAEoD,IADxDN,EAAIO,aANE,G,WCDjBE,G,4MAEFlC,MAAQ,CACJmC,YAAaZ,GAAWG,KAAKD,OAC7BxF,QAAS,I,EAGbmG,QAAU,WACN,EAAKC,SAAWC,aAAY,WACxB,IAAMH,EAAcZ,GAAWG,KAAKD,OACpC,EAAKc,SAAS,CAAEJ,kBACjB,M,EAGPK,W,sBAAa,8BAAAnF,EAAA,sEACiB1B,EAAW,QAD5B,gBACDM,EADC,EACDA,QACR,EAAKsG,SAAS,CAAEtG,YAFP,2C,EAKbwG,SAAW,WACP,IACIrD,EADEmB,EAAO,EAAK3C,MAAM4C,SAASC,SAYjC,OAVAtB,GAASuD,SAAQ,SAAAtC,GACb,GAAIA,EAAK9F,MAAQiG,EACbnB,EAAQgB,EAAKhB,WACV,GAAIgB,EAAKX,SAAU,CACtB,IAAMoB,EAAQT,EAAKX,SAASmB,MAAK,SAAAC,GAAK,OAAgC,IAA5BN,EAAKoC,QAAQ9B,EAAMvG,QACzDuG,IACAzB,EAAQyB,EAAMzB,WAInBA,G,EAGXwD,OAAS,WACLC,KAAMC,QAAQ,CAEVxD,KAAM,cAACyD,GAAA,EAAD,IACNC,QAAS,uCACTC,KAAM,WACFzH,QAAQC,IAAI,MACZT,IACAkI,EAAWtJ,KAAO,GAClB,EAAKgE,MAAMC,QAAQC,QAAQ,WAE/BqF,SAVU,WAWN3H,QAAQC,IAAI,c,uDAMxB,WACI0C,KAAKiE,UACLjE,KAAKqE,e,kCAIT,WACIY,cAAcjF,KAAKkE,Y,oBAGvB,WAAU,IAAD,EAE4BlE,KAAK6B,MAA9BmC,EAFH,EAEGA,YAAalG,EAFhB,EAEgBA,QAEfmD,EAAQjB,KAAKsE,WAEnB,OACI,sBAAKxE,UAAU,SAAf,UACI,sBAAKA,UAAU,aAAf,UACI,oFACA,cAACqD,GAAD,CAAY+B,QAASlF,KAAKyE,OAA1B,6BAEJ,sBAAK3E,UAAU,gBAAf,UACI,qBAAKA,UAAU,qBAAf,SAAqCmB,IACrC,sBAAKnB,UAAU,sBAAf,UACI,+BAAOkE,IACP,+BAAOlG,iB,GA/EViD,aAuFNmC,eAAWa,ICvFXoB,I,mKATX,WACI,OACI,qBAAKrF,UAAU,OAAf,sD,GAHOiB,c,uHCCbqE,GAAWC,IAAKjF,KCAhBgF,IDEgBrE,YCFLsE,IAAKjF,MCChBgF,IDCiBrE,YCDNsE,IAAKjF,MAChBkF,GAAiB,CACnBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KA+IRE,G,4MA1IX7G,QAAUC,IAAMC,Y,EAEhB8C,MAAQ,CACJ8D,SAAU,I,EAOdb,KAAO,WACH,IAAIrJ,EAAO,EAAKoD,QAAQ+G,QAAQC,iBAChC,EAAKpG,MAAMqG,SAASrK,I,EAGxBsK,Y,sBAAc,8BAAA7G,EAAA,sEACWb,IADX,OAEU,OADdc,EADI,QAECC,OACDhD,EAAO+C,EAAO/C,KACpBiB,QAAQC,IAAI1B,KAAKC,UAAUO,IAC3B,EAAK4J,WAAW5J,IALV,2C,EASd4J,WAAa,SAAC5J,GACVA,EAAK4F,KAAI,SAACC,EAAMgE,GACZhE,EAAI,MAAYA,EAAKhC,KACrBgC,EAAI,MAAYA,EAAKiE,GACrBjE,EAAI,IAAUA,EAAKiE,GACnBjE,EAAI,SAAeA,EAAKkE,iBACjBlE,EAAI,UACJA,EAAI,UACX,EAAK+D,WAAW/D,EAAKX,aAEzB,EAAK8C,SAAS,CACVuB,SAAUvJ,K,uDA7BlB,WACI4D,KAAK+F,gB,oBAiCT,WAAU,IAAD,EAEuC/F,KAAKP,MAA1C2G,EAFF,EAEEA,QAASC,EAFX,EAEWA,YAAaC,EAFxB,EAEwBA,YACtBX,EAAY3F,KAAK6B,MAAjB8D,SAeP,OAbAtI,QAAQC,IAAI,KAAO+I,GACnBhJ,QAAQC,IAAI,KAAO1B,KAAKC,UAAUyK,IAE9BtG,KAAKsG,YADW,QAAhBD,EACmB,KAOFC,EAKjB,cAAC,KAAD,CACIF,QAASA,EACTnF,MAAK,UAAqB,QAAhBoF,EAAwB,eAAO,eAApC,gBACLE,OAAO,eACPC,WAAW,eACX1B,KAAM9E,KAAK8E,KAAK2B,KAAKzG,MACrBgF,SAAUhF,KAAKP,MAAMuF,SANzB,SAQI,eAAC,IAAD,2BAAMjF,IAAKC,KAAKnB,QAASqB,cAAeF,KAAKsG,aAAiBhB,IAA9D,cAEI,cAAC,GAAD,CAAUrF,KAAK,KAAKyG,MAAM,eAAKC,QAAM,EAArC,SACI,cAAC,IAAD,MAGJ,cAAC,GAAD,CAAU1G,KAAK,UAAUyG,MAAM,eAAKrG,MAAO,CACvC,CACIC,UAAU,EACVnD,QAAS,kCAEb,CACIyJ,QAAS,IAAIC,OAAO,aAAc,KAClC1J,QAAS,+CAPjB,SAUI,cAAC,IAAD,CAAOsD,YAAY,qCAGvB,cAAC,GAAD,CAAUR,KAAK,OAAOyG,MAAM,eAAKrG,MAAO,CACpC,CACIC,UAAU,EACVnD,QAAS,mCAHjB,SAMI,cAAC,IAAD,CAAOsD,YAAY,qCAGvB,cAAC,GAAD,CAAUR,KAAK,SAASyG,MAAM,eAA9B,SACI,eAAC,KAAMI,MAAP,WACI,cAAC,KAAD,CAAOC,MAAO,EAAd,oBACA,cAAC,KAAD,CAAOA,MAAO,EAAd,yBAIR,cAAC,GAAD,CAAU9G,KAAK,MAAMyG,MAAM,2BAA3B,SACI,cAAC,IAAD,CAAOjG,YAAY,iDAGvB,cAAC,GAAD,CAAUR,KAAK,QAAQyG,MAAM,2BAAOrG,MAAO,CACvC,CACIhE,KAAM,QACNc,QAAS,qDAHjB,SAMI,cAAC,IAAD,CAAOsD,YAAY,iDAGvB,cAAC,GAAD,CAAUR,KAAK,UAAUyG,MAAM,eAAKrG,MAAO,CACvC,CACIC,UAAU,IAFlB,SAKI,cAAC,KAAD,CACI0G,WAAW,OACXC,cAAc,OACdtB,SAAUA,EACVlF,YAAY,iCACZsG,MAAO/G,KAAKsG,YAAYY,sB,GAhI5BpI,IAAMiC,WCCxBqE,GAAWC,IAAKjF,KAChB+G,GAASC,KAAOD,OACfE,GAAeC,KAAfD,YAmaQE,G,kDA1ZX,aAAe,IAAD,8BACV,gBAJJ1I,QAAUC,IAAMC,YAGF,EAoCdyI,WAAa,WACT,EAAKC,QAAU,CACX,CACIxG,MAAO,eACPyG,OAAQ,SAACC,EAAMC,EAAQ3B,GACnB,OACI,gCAAQ,EAAKpE,MAAMgG,WAAWjC,QAAU,GAAK,EAAK/D,MAAMgG,WAAWC,UAAY7B,EAAQ,OAInG,CACIhF,MAAO,eACP8G,UAAW,WAEf,CACI9G,MAAO,eACP8G,UAAW,QAMf,CACI9G,MAAO,2BACP8G,UAAW,OAEf,CACI9G,MAAO,2BACP8G,UAAW,UACXL,OAAQ,SAACC,EAAMC,EAAQ3B,GAAf,OACJ,cAAC,KAAD,CAAQ+B,gBAAgB,eAAKC,kBAAkB,eAAKC,SAAkB,IAATP,EAAiB,EAAI,EAAGQ,gBAAc,EAC3FC,SAAU,kBAAM,EAAKA,SAAST,EAAMC,QAGpD,CACI3G,MAAO,2BACP8G,UAAW,YACXL,OAAQ,SAACX,GACL,OAAO3D,GAAW2D,KAG1B,CACI9F,MAAO,eACPyG,OAAQ,SAACW,GAAD,OACJ,+BACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAQnD,QAAS,kBAAM,EAAKoD,SAASD,IAArC,0BACA,cAAC,IAAD,CAAQhM,KAAK,SAAS6I,QAAS,kBAAM,EAAKqD,WAAWF,EAAInC,KAAzD,mCAnFV,EA2FdsC,YA3Fc,sBA2FA,kDAAAtJ,EAAA,6DAAO0G,EAAP,+BAAiB,EAAGkC,EAApB,+BAA+B,GAClCD,EAAc,EAAKhG,MAAnBgG,YAEDzL,EAAO,EAAKyC,QAAQ+G,QAAQC,kBAC7B4C,QAAU7C,EACfxJ,EAAK0L,SAAWA,EALN,SAOW9J,EAAY5B,GAPvB,OAQU,OADd+C,EAPI,QAQCC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CACVuE,KAAMvM,EACNyL,WAAW,6BACJA,GADG,IAENe,MAAOzJ,EAAO/C,KAAKwM,MACnBhD,QAASA,EACTkC,SAAUA,OAhBZ,4CA3FA,EAkHde,OAlHc,sBAkHL,gCAAA3J,EAAA,6DACC9C,EAAO,EAAKyC,QAAQ+G,QAAQC,kBACzBiD,YACL1M,EAAK2M,UAAYxF,KAAKzH,MAAOM,EAAK0M,UAAU,GAAGE,IAC/C5M,EAAK6M,QAAU1F,KAAKzH,MAAOM,EAAK0M,UAAU,GAAGE,IAC7C5M,EAAK0M,UAAY,MALhB,SAOgB9K,EAAY5B,GAP5B,OAQe,OADd+C,EAPD,QAQMC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CAACuE,KAAMvM,KAVpB,2CAlHK,EAkId8M,cAlIc,uCAkIE,WAAOC,GAAP,SAAAjK,EAAA,sEACN,EAAKkF,SAAS,CAChByD,WAAYsB,IAFJ,OAIZ,EAAKX,YAAYW,EAAKvD,QAASuD,EAAKrB,UAJxB,2CAlIF,wDA0IdM,SA1Ic,uCA0IH,WAAOT,EAAMC,GAAb,SAAA1I,EAAA,sDAEPwF,KAAMC,QAAQ,CACV1D,MAAO,eACPsF,OAAQ,eACRC,WAAY,eACZrF,KAAM,cAACyD,GAAA,EAAD,IACNC,QAAS,qEACTC,KAAK,WAAD,4BAAE,4BAAA5F,EAAA,6DACF0I,EAAOwB,SAAWxB,EAAOwB,QADvB,SAEmBjL,EAAYyJ,GAF/B,OAGkB,OADdzI,EAFJ,QAGSC,MAEPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKoL,eAGLa,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAhB1B,2CAAF,kDAAC,KARF,2CA1IG,0DA0KdoM,aAAe,WACX,EAAKpF,SAAS,CACVqF,gBAAgB,KA5KV,EAiLdC,QAAU,WACNrM,QAAQC,IAAI,EAAKuE,OACjB,EAAKuC,SAAS,CACViC,YAAa,MACboD,gBAAgB,KArLV,EA0LdnB,SA1Lc,uCA0LH,WAAOlM,GAAP,SAAA8C,EAAA,sDAEP,EAAKkF,SAAS,CACViC,YAAa,OACboD,gBAAgB,IAGpB,EAAKE,SAAWvN,EAChBiB,QAAQC,IAAI1B,KAAKC,UAAU,EAAK8N,UAAW,kCARpC,2CA1LG,wDAwMd7D,SAAW,SAACnJ,GACR,IAAIgB,EAAS,EAAKkE,MAAMwE,YACxBhJ,QAAQC,IAAIX,EAAQgB,GAChB,QAAUA,EACV,EAAKiM,QAAQjN,GAGb,EAAKkN,SAASlN,IA/MR,EAoNdiN,QApNc,uCAoNJ,WAAOxN,GAAP,eAAA8C,EAAA,sEACejB,EAAW7B,GAD1B,OAEc,OADd+C,EADA,QAEKC,MACP,EAAKgF,SAAS,CACVqF,gBAAgB,IAEpBJ,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKoL,eAELa,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAhBtB,2CApNI,wDA2OdyM,SA3Oc,uCA2OH,WAAOzN,GAAP,eAAA8C,EAAA,sEACcf,EAAY/B,GAD1B,OAEa,OADd+C,EADC,QAEIC,MACP,EAAKgF,SAAS,CACVqF,gBAAgB,IAEpBJ,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKoL,eAELa,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAhBrB,2CA3OG,wDAiQdmL,WAAa,SAACtC,GAEVvB,KAAMC,QAAQ,CACV1D,MAAO,eACPsF,OAAQ,eACRC,WAAY,eACZrF,KAAM,cAAC2I,GAAA,EAAD,IACNjF,QAAS,qEACTC,KAAK,WAAD,4BAAE,8BAAA5F,EAAA,6DACE6K,EAAM,IAAIC,OACV,GAAK/D,EAFP,SAGmB/H,EAAc6L,GAHjC,OAIkB,OADd5K,EAHJ,QAISC,MAEPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKoL,eAGLa,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAjB1B,2CAAF,kDAAC,MAzQC,EAkSd6M,YAAc,WACVvF,KAAMC,QAAQ,CACV1D,MAAO,eACPsF,OAAQ,eACRC,WAAY,eACZrF,KAAM,cAAC2I,GAAA,EAAD,IACNjF,QAAQ,iCAAD,OAAU,EAAKhD,MAAMqI,gBAAgBrM,OAArC,sBACPiH,KAAK,WAAD,4BAAE,8BAAA5F,EAAA,6DAEI6K,EAAM,EAAKlI,MAAMqI,gBAFrB,SAImBhM,EAAc6L,GAJjC,OAKkB,OADd5K,EAJJ,QAKSC,MACPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKgH,SAAS,CACV8F,gBAAiB,KAErB,EAAK1B,eAGLa,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MApB1B,2CAAF,kDAAC,MAzSC,EA6Ud+M,YA7Uc,sBA6UA,8BAAAjL,EAAA,6DACV,EAAKL,QAAQ+G,QAAQwE,cADX,SAEWpM,EAAY,CAACyK,QAAS,EAAGX,SAAU,KAF9C,OAGU,OADd3I,EAFI,QAGCC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CAACiG,SAAUjO,KALnB,2CA3UV,EAAKyF,MAAQ,CACT8G,KAAM,GACNuB,gBAAiB,GAEjBrC,WAAY,CACRe,MAAO,EACPhD,QAAS,EACTkC,SAAU,GACVwC,gBAAiB,CAAC,GAAI,GAAI,GAAI,KAC9BC,iBAAiB,EACjBC,iBAAiB,GAErBnE,YAAa,MACboD,gBAAgB,GAfV,E,sDAqUd,WACIzJ,KAAKwH,e,+BAGT,WACIxH,KAAKwI,gB,oBAYT,WAAU,IAAD,OAECmB,EAAW3J,KAAK2J,SAFjB,EAGoE3J,KAAK6B,MAAvE8G,EAHF,EAGEA,KAAMuB,EAHR,EAGQA,gBAAiBrC,EAHzB,EAGyBA,WAAY4B,EAHrC,EAGqCA,eAAgBpD,EAHrD,EAGqDA,YAGpDoE,EAAe,CACjBP,gBAAiBA,EACjB9B,SAAU,SAAC8B,GAAD,OAAqB,EAAK9F,SAAS,CAAC8F,sBAGlD,OACI,eAAC,KAAD,WACI,cAAC,IAAD,CACInK,IAAKC,KAAKnB,QACV6L,MAAO,CAACC,aAAc,IAF1B,SAII,eAAC,KAAD,CAAKC,OAAQ,GAAb,UACI,cAAC,KAAD,CAAKpF,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,OAAf,SACI,cAAC,IAAD,CAAOQ,YAAY,2BAAOuG,YAAU,EAACoB,SAAUpI,KAAK6I,aAG5D,cAAC,KAAD,CAAKrD,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,MAAf,SACI,cAAC,IAAD,CAAOQ,YAAY,2BAAOuG,YAAU,EAACoB,SAAUpI,KAAK6I,aAG5D,cAAC,KAAD,CAAKrD,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,UAAf,SACI,eAAC,KAAD,CAAQQ,YAAY,2BAAOuG,YAAU,EAACoB,SAAUpI,KAAK6I,OAArD,UACI,cAAC1B,GAAD,CAAQJ,MAAM,IAAd,0BACA,cAACI,GAAD,CAAQJ,MAAM,IAAd,iCAIZ,cAAC,KAAD,CAAKvB,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,YAAf,SACI,cAACoH,GAAD,CAAaL,YAAU,EAACoB,SAAUpI,KAAK6I,kBAKvD,+BACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAQxM,KAAK,UAAU6I,QAASlF,KAAK0J,QAArC,sCACA,cAAC,IAAD,CAAQrN,KAAK,SAASwO,UAAWX,EAAgBrM,OACzCqH,QAASlF,KAAKiK,YADtB,2CAIR,cAAC,KAAD,CACIQ,aAAcA,EACdhD,QAASzH,KAAKyH,QACdqD,OAAO,KACPC,WAAYpC,EACZd,WAAYA,EACZO,SAAUpI,KAAKkJ,cACfwB,MAAO,CAACM,UAAW,MAEnBvB,GACA,cAAC,GAAD,CAAWrD,QAASqD,EAAgBpD,YAAaA,EAAaC,YAAaqD,EAChE3E,SAAUhF,KAAKwJ,aAAc1D,SAAU9F,KAAK8F,kB,GA1ZxD/E,aCbbqE,GAAWC,IAAKjF,KA2FP6K,G,4MAvFXpM,QAAUC,IAAMC,Y,EAEhB8C,MAAQ,G,EAGRiE,SAAW,WACP,IAAM/F,EAAM,EAAKlB,QAAQ+G,QACzB,EAAKnG,MAAMyL,cAAc,GACzBnL,EAAIoL,iBACCpO,MAAK,SAAAkC,GACF5B,QAAQC,IAAI2B,GACZc,EAAIqK,cACJ,EAAKgB,QAAQnM,MAEhBhC,OAAM,SAAA4C,GACHxC,QAAQC,IAAIuC,O,EAKxBuL,Q,uCAAU,WAAOhP,GAAP,eAAA8C,EAAA,sEACeZ,EAAWlC,GAD1B,OAEc,OADd+C,EADA,QAEKC,MACPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKqC,MAAM4L,aAEXhC,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAbtB,2C,wDAmBV4H,SAAW,WACP,EAAKnG,QAAQ+G,QAAQwE,cACrB,EAAK3K,MAAMyL,cAAc,I,4CAG7B,WAAU,IAEE9E,EAAYpG,KAAKP,MAAjB2G,QAOR,OACI,cAAC,KAAD,CAAOA,QAAqB,IAAZA,EAAenF,MAAM,2BAAOsF,OAAO,eAC/CC,WAAW,eAAK1B,KAAM9E,KAAK8F,SAAUd,SAAUhF,KAAKgF,SADxD,SAGI,eAAC,IAAD,2BAAMjF,IAAKC,KAAKnB,SATD,CACnB0G,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAOhB,cAEI,cAAC,GAAD,CAAUvF,KAAK,OAAOyG,MAAM,2BAAOrG,MAAO,CACtC,CACIC,UAAU,EACVnD,QAAS,+CAHjB,SAMI,cAAC,IAAD,CAAOsD,YAAY,iDAGvB,cAAC,GAAD,CAAUR,KAAK,cAAcyG,MAAM,2BAAOrG,MAAO,CAC7C,CACIC,UAAU,EACVnD,QAAS,+CAHjB,SAMI,cAAC,IAAD,CAAOsD,YAAY,iDAGvB,cAAC,GAAD,CAAUR,KAAK,OAAOyG,MAAM,qBAA5B,SACI,cAAC,IAAD,CAAOjG,YAAY,qD,GAhFrB3B,IAAMiC,WCgFbuK,G,4MA5EXzJ,MAAQ,CACJ0J,SAAU,GAEVC,WAAY,G,EAGhBhE,WAAa,WACT,EAAKC,QAAU,CACX,CACIxG,MAAO,2BACP8G,UAAW,QAEf,CACI9G,MAAO,2BACP8G,UAAW,eAEf,CACI9G,MAAO,qBACP8G,UAAW,QAEf,CACI9G,MAAO,2BACP8G,UAAW,WAEf,CACI9G,MAAO,2BACP8G,UAAW,e,EAKvB0D,Y,sBAAc,8BAAAvM,EAAA,sEACWd,IADX,OAEU,OADde,EADI,QAECC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CAAEmH,SAAUnP,KAJpB,2C,EASd8O,cAAgB,SAACvN,GACb,EAAKyG,SAAS,CACVoH,WAAY7N,K,wDAIpB,WACIqC,KAAKwH,e,+BAGT,WACIxH,KAAKyL,gB,oBAGT,WAAU,IAAD,SAE4BzL,KAAK6B,MAA9B0J,EAFH,EAEGA,SAAUC,EAFb,EAEaA,WACZvK,EACF,+BACI,cAAC,IAAD,CAAQ5E,KAAK,UAAU6I,QAAS,kBAAK,EAAKgG,cAAc,IAAxD,4BAIR,OACI,eAAC,KAAD,CAAMjK,MAAOA,EAAb,UACI,cAAC,KAAD,CACI6J,OAAO,KACPL,aAAc,CAAEpO,KAAM,YACtBoL,QAASzH,KAAKyH,QACdsD,WAAYQ,IAChB,cAAC,GAAD,CAASnF,QAASoF,EAAYN,cAAelL,KAAKkL,cAAeG,UAAWrL,KAAKyL,qB,GAxE9E1K,aCFbqE,GAAWC,IAAKjF,KAChBkF,GAAiB,CACnBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAyGTkG,G,4MApGX7M,QAAUC,IAAMC,Y,EAEhB8C,MAAQ,CACJ8D,SAAU,I,EAOdb,KAAO,WACH,IAAIrJ,EAAO,EAAKoD,QAAQ+G,QAAQC,iBAChC,EAAKpG,MAAMqG,SAASrK,I,EAGxBsK,Y,sBAAc,8BAAA7G,EAAA,sEACWV,IADX,OAEU,OADdW,EADI,QAECC,OACDhD,EAAO+C,EAAO/C,KACpB,EAAK4J,WAAW5J,IAJV,2C,EAQd4J,WAAa,SAAC5J,GACVA,EAAK4F,KAAI,SAACC,EAAMgE,GACZhE,EAAI,MAAYA,EAAKiE,GACrBjE,EAAI,IAAUA,EAAKiE,GACnBjE,EAAI,SAAeA,EAAKkE,iBACjBlE,EAAI,UACJA,EAAI,UACX,EAAK+D,WAAW/D,EAAKX,aAEzB,EAAK8C,SAAS,CACVuB,SAAUvJ,K,uDA3BlB,WACI4D,KAAK+F,gB,oBA+BT,WAAU,IAAD,EAEyC/F,KAAKP,MAA3C2G,EAFH,EAEGA,QAASC,EAFZ,EAEYA,YAAaC,EAFzB,EAEyBA,YACtBX,EAAa3F,KAAK6B,MAAlB8D,SAGR,OAEI,cAAC,KAAD,CACIS,QAASA,EACTnF,MAAK,UAAqB,QAAhBoF,EAAwB,eAAO,eAApC,gBACLE,OAAO,eACPC,WAAW,eACX1B,KAAM9E,KAAK8E,KAAK2B,KAAKzG,MACrBgF,SAAUhF,KAAKP,MAAMuF,SANzB,SAQI,eAAC,IAAD,2BAAMjF,IAAKC,KAAKnB,QAASqB,cAAeoG,GAAiBhB,IAAzD,cAEI,cAAC,GAAD,CAAUrF,KAAK,KAAKyG,MAAM,eAAKC,QAAM,EAArC,SACI,cAAC,IAAD,MAGJ,cAAC,GAAD,CAAU1G,KAAK,WAAWyG,MAAM,2BAC5BrG,MAAO,CAAC,CAAEC,UAAU,EAAMnD,QAAS,+CADvC,SAEI,cAAC,KAAD,CACIwI,SAAUA,MAIlB,cAAC,GAAD,CAAU1F,KAAK,QAAQyG,MAAM,2BAAOrG,MAAO,CACvC,CACIC,UAAU,EACVnD,QAAS,+CAHjB,SAMI,cAAC,IAAD,CAAOsD,YAAY,iDAGvB,cAAC,GAAD,CAAUR,KAAK,cAAcyG,MAAM,2BAAnC,SACI,cAAC,IAAD,CAAOjG,YAAY,iDAGvB,cAAC,GAAD,CAAUR,KAAK,MAAMyG,MAAM,MAAMrG,MAAO,CACpC,CACIC,UAAU,EACVnD,QAAS,0BAHjB,SAMI,cAAC,IAAD,CAAOsD,YAAY,4BAGvB,cAAC,GAAD,CAAUR,KAAK,OAAOyG,MAAM,2BAA5B,SACI,cAAC,IAAD,CAAOjG,YAAY,2D,GA5FnB3B,IAAMiC,WCFxBqE,GAAWC,IAAKjF,KAChB+G,GAASC,KAAOD,OACdE,GAAgBC,KAAhBD,YAyZO1F,G,kDApZX,aAAe,IAAD,8BACV,gBAHJ9C,QAAUC,IAAMC,YAEF,EAmBdyI,WAAa,WACT,EAAKC,QAAU,CACX,CACIxG,MAAO,eACPyG,OAAQ,SAACC,EAAMC,EAAQ3B,GACnB,OACI,gCAAQ,EAAKpE,MAAMgG,WAAWjC,QAAU,GAAK,EAAK/D,MAAMgG,WAAWC,UAAY7B,EAAQ,OAInG,CACIhF,MAAO,2BACP8G,UAAW,SAEf,CACI9G,MAAO,2BACP8G,UAAW,eAEf,CACI9G,MAAO,MACP8G,UAAW,OAEf,CACI9G,MAAO,eACP8G,UAAW,YAEf,CACI9G,MAAO,2BACP8G,UAAW,UACXL,OAAQ,SAACC,EAAMC,EAAQ3B,GAAf,OACJ,cAAC,KAAD,CAAQ+B,gBAAgB,eAAKC,kBAAkB,eAAKC,QAAkB,IAATP,EAAa,EAAI,EAAGQ,gBAAc,EAACC,SAAU,kBAAM,EAAKA,SAAST,EAAMC,QAG5I,CACI3G,MAAO,2BACP8G,UAAW,YACXL,OAAQ,SAACX,GACL,OAAO3D,GAAW2D,KAG1B,CACI9F,MAAO,eACPyG,OAAQ,SAACW,GAAD,OACJ,+BACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAQnD,QAAS,kBAAM,EAAKoD,SAASD,IAArC,0BACA,cAAC,IAAD,CAAQhM,KAAK,SAAS6I,QAAS,kBAAM,EAAKyG,WAAWtD,EAAInC,KAAzD,mCAjEV,EAyEd0F,YAzEc,sBAyEA,kDAAA1M,EAAA,6DAAO0G,EAAP,+BAAiB,EAAGkC,EAApB,+BAA+B,GACjCD,EAAe,EAAKhG,MAApBgG,YAEFzL,EAAO,EAAKyC,QAAQ+G,QAAQC,kBAC7B4C,QAAU7C,EACfxJ,EAAK0L,SAAWA,EALN,SAOWvJ,EAAYnC,GAPvB,OAQU,OADd+C,EAPI,QAQCC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CACVuE,KAAMvM,EACNyL,WAAW,6BACJA,GADG,IAENe,MAAOzJ,EAAO/C,KAAKwM,MACnBhD,QAASA,EACTkC,SAAUA,OAhBZ,4CAzEA,EAgGde,OAhGc,sBAgGL,gCAAA3J,EAAA,6DACC9C,EAAO,EAAKyC,QAAQ+G,QAAQC,kBACzBiD,YACL1M,EAAK0M,UAAYhF,GAAU1H,EAAK0M,UAAU,GAAGE,IAAM,IAAMlF,GAAU1H,EAAK0M,UAAU,GAAGE,KAHpF,SAKgBzK,EAAYnC,GAL5B,OAMe,OADd+C,EALD,QAMMC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CAAEuE,KAAMvM,KARrB,2CAhGK,EA8Gd8M,cA9Gc,uCA8GE,WAAOC,GAAP,SAAAjK,EAAA,sEACN,EAAKkF,SAAS,CAChByD,WAAYsB,IAFJ,OAIZ,EAAKyC,YAAYzC,EAAKvD,QAASuD,EAAKrB,UAJxB,2CA9GF,wDAsHdM,SAtHc,uCAsHH,WAAOT,EAAMC,GAAb,SAAA1I,EAAA,sDAEPwF,KAAMC,QAAQ,CACV1D,MAAO,eACPsF,OAAQ,eACRC,WAAY,eACZrF,KAAM,cAACyD,GAAA,EAAD,IACNC,QAAS,qEACTC,KAAK,WAAD,4BAAE,4BAAA5F,EAAA,6DACqB,IAAnB0I,EAAOwB,QACPxB,EAAOwB,QAAU,EAEjBxB,EAAOwB,QAAU,EAJnB,SAMmBzK,EAAYiJ,GAN/B,OAOkB,OADdzI,EANJ,QAOSC,MAEPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKwO,eAGLvC,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MApB1B,2CAAF,kDAAC,KARF,2CAtHG,0DA0JdoM,aAAe,WACX,EAAKpF,SAAS,CACVqF,gBAAgB,KA5JV,EAiKdC,QAAU,WACNrM,QAAQC,IAAI,EAAKuE,OAEjB,EAAKuC,SAAS,CACViC,YAAa,MACboD,gBAAgB,KAtKV,EA2KdnB,SA3Kc,uCA2KH,WAAOlM,GAAP,SAAA8C,EAAA,sDAEP,EAAKkF,SAAS,CACViC,YAAa,OACboD,gBAAgB,IAGpB,EAAKE,SAAWvN,EAChBiB,QAAQC,IAAI,EAAKqM,SAAW,OARrB,2CA3KG,wDAuLd7D,SAAW,SAACnJ,GACR,IAAIgB,EAAS,EAAKkE,MAAMwE,YACxBhJ,QAAQC,IAAIX,EAAQgB,GAChB,OAASA,EACT,EAAKkO,QAAQlP,GAEb,EAAKmP,SAASnP,IA7LR,EAkMdkP,QAlMc,uCAkMJ,WAAOzP,GAAP,eAAA8C,EAAA,sEACeT,EAAWrC,GAD1B,OAEc,OADd+C,EADA,QAEKC,MACP,EAAKgF,SAAS,CACVqF,gBAAgB,IAEpBJ,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKwO,eAELvC,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAhBtB,2CAlMI,wDAwNd2O,WAAa,WACG,EAAKC,UAAUpG,QAAQqG,QAAQrG,QACvCuF,iBACCpO,MAAK,SAAAkC,GACF,EAAK6M,SAAS7M,GACd,EAAKmF,SAAS,CAAEqF,gBAAgB,OAEnCxM,OAAM,SAAA4C,GACHxC,QAAQC,IAAIuC,OAhOV,EAqOdiM,SArOc,uCAqOH,WAAO1P,GAAP,eAAA8C,EAAA,sEACcP,EAAYvC,GAD1B,OAEa,OADd+C,EADC,QAEIC,MACP,EAAKgF,SAAS,CACVqF,gBAAgB,IAEpBJ,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKwO,eAELvC,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAhBrB,2CArOG,wDA2PduO,WAAa,SAAC1F,GACVvB,KAAMC,QAAQ,CACV1D,MAAO,eACPsF,OAAQ,eACRC,WAAY,eACZrF,KAAM,cAAC2I,GAAA,EAAD,IACNjF,QAAS,qEACTC,KAAK,WAAD,4BAAE,8BAAA5F,EAAA,6DACE6K,EAAM,IAAIC,OACV,GAAK/D,EAFP,SAImBvH,EAAcqL,GAJjC,OAKkB,OADd5K,EAJJ,QAKSC,MACPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKwO,eAGLvC,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAjB1B,2CAAF,kDAAC,MAlQC,EA2Rd6M,YAAc,WACVvF,KAAMC,QAAQ,CACV1D,MAAO,eACPsF,OAAQ,eACRC,WAAY,eACZrF,KAAM,cAAC2I,GAAA,EAAD,IACNjF,QAAQ,iCAAD,OAAU,EAAKhD,MAAMqI,gBAAgBrM,OAArC,sBACPiH,KAAK,WAAD,4BAAE,8BAAA5F,EAAA,6DAEI6K,EAAM,EAAKlI,MAAMqI,gBACvB7M,QAAQC,IAAI,MAAQyM,GAHlB,SAImBrL,EAAcqL,GAJjC,OAKkB,OADd5K,EAJJ,QAKSC,MACPiK,KAAahK,QAAQ,CACjBiK,SAAU,EACVnM,QAAS,eACToM,YAAapK,EAAO/B,MAExB,EAAKgH,SAAS,CACV8F,gBAAiB,KAErB,EAAK0B,eAGLvC,KAAanM,MAAM,CACfoM,SAAU,KACVnM,QAAS,eACToM,YAAapK,EAAO/B,MApB1B,2CAAF,kDAAC,MAlSC,EAqUd+M,YArUc,sBAqUA,8BAAAjL,EAAA,6DACV,EAAKL,QAAQ+G,QAAQwE,cADX,SAEW7L,EAAY,CAAEkK,QAAS,EAAGX,SAAU,KAF/C,OAGU,OADd3I,EAFI,QAGCC,OACDhD,EAAO+C,EAAO/C,KAAKsM,QACzB,EAAKtE,SAAS,CAAEuE,KAAMvM,KALhB,2CAnUV,EAAKyF,MAAQ,CACT8G,KAAM,GACNuB,gBAAiB,GAEjBrC,WAAY,CACRe,MAAO,EACPhD,QAAS,EACTkC,SAAU,GACVwC,gBAAiB,CAAC,GAAI,GAAI,GAAI,KAC9BC,iBAAiB,EACjBC,iBAAiB,GAErBnE,YAAa,MACboD,gBAAgB,GAfV,E,sDA8Td,WACIzJ,KAAKwH,e,+BAGT,WACIxH,KAAK4L,gB,oBAUT,WAAU,IAAD,OAECjC,EAAW3J,KAAK2J,SAFjB,EAGsE3J,KAAK6B,MAAxE8G,EAHH,EAGGA,KAAMuB,EAHT,EAGSA,gBAAiBrC,EAH1B,EAG0BA,WAAY4B,EAHtC,EAGsCA,eAAgBpD,EAHtD,EAGsDA,YAErDoE,EAAe,CACjBP,gBAAiBA,EACjB9B,SAAU,SAAC8B,GAAD,OAAqB,EAAK9F,SAAS,CAAE8F,sBAGnD,OACI,eAAC,KAAD,WACI,cAAC,IAAD,CACInK,IAAKC,KAAKnB,QACV6L,MAAO,CAAEC,aAAc,IAF3B,SAII,eAAC,KAAD,CAAKC,OAAQ,GAAb,UACI,cAAC,KAAD,CAAKpF,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,QAAQyG,MAAM,eAA7B,SACI,cAAC,IAAD,CAAOjG,YAAY,uCAG3B,cAAC,KAAD,CAAK+E,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,cAAcyG,MAAM,2BAAnC,SACI,cAAC,IAAD,CAAOjG,YAAY,mDAG3B,cAAC,KAAD,CAAK+E,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,UAAUyG,MAAM,2BAA/B,SACI,eAAC,KAAD,CAAQjG,YAAY,qBAApB,UACI,cAAC,GAAD,CAAQsG,MAAM,IAAd,0BACA,cAAC,GAAD,CAAQA,MAAM,IAAd,iCAIZ,cAAC,KAAD,CAAKvB,KAAM,EAAX,SACI,cAAC,GAAD,CAAUvF,KAAK,YAAYyG,MAAM,2BAAjC,SACI,cAAC,GAAD,QAGR,cAAC,KAAD,CAAKlB,KAAM,GAAX,SACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAQnJ,KAAK,UAAU6I,QAASlF,KAAK6I,OAArC,0BACA,cAAC,IAAD,CAAQ3D,QAASlF,KAAKmK,YAAtB,qCAKhB,+BACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAQ9N,KAAK,UAAU6I,QAASlF,KAAK0J,QAArC,0BACA,cAAC,IAAD,CAAQrN,KAAK,SAASwO,UAAWX,EAAgBrM,OAAQqH,QAASlF,KAAKiK,YAAvE,2CAGR,cAAC,KAAD,CACIQ,aAAcA,EACdhD,QAASzH,KAAKyH,QACdqD,OAAO,KACPC,WAAYpC,EACZd,WAAYA,EACZO,SAAUpI,KAAKkJ,cACfwB,MAAO,CAAEM,UAAW,MAEpBvB,GAAkB,cAAC,GAAD,CAAWrD,QAASqD,EAAgBpD,YAAaA,EAAaC,YAAaqD,EAAU3E,SAAUhF,KAAKwJ,aAAc1D,SAAU9F,KAAK8F,kB,GAhZpJ/E,a,UCuDJmL,G,4JAvCX,WAAU,IAAD,EACqClM,KAAKP,MAA5BsB,EADd,EACGoL,UAAyBC,EAD5B,8BAECC,EAAMxP,IAAsBwP,IAC5BjK,EAAK,GAAGpC,KAAKP,MAAM2C,KACnBkK,EAAIlK,EAAKoC,QAAQpC,GAKvB,OAJA/E,QAAQC,IAAI,OAAO1B,KAAKC,UAAWwQ,IACnChP,QAAQC,IAAI,mBAAS8E,GACrB/E,QAAQC,IAAI,OAAOgP,GAGX,cAAC,IAAD,6BAAWF,GAAX,IAAiB1E,OAAQ,SAAAjI,GACrB,OAAc,IAAP6M,EACI,cAACvL,EAAD,gBAAetB,IAChB,cAAC,IAAD,CAAUyC,GAAG,mB,GAhChBnB,aCInBwL,GAA2BC,KAA3BD,OAAQE,GAAmBD,KAAnBC,MAAOC,GAAYF,KAAZE,QAkCRzG,G,4JA/BX,WAKI,OACI,eAAC,KAAD,CAAQyE,MAAO,CAAEiC,OAAQ,QAAzB,UACI,cAACF,GAAD,UACI,cAAC,GAAD,MAEJ,eAAC,KAAD,WACI,cAAC,GAAD,qBACA,cAACC,GAAD,CAAShC,MAAO,CAAEkC,OAAO,GAAGC,gBAAiB,QAA7C,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOzK,KAAK,QAAQ+J,UAAWhH,KAC/B,cAAC,IAAD,CAAO/C,KAAK,eAAe+J,UAAW5E,KACtC,cAAC,GAAD,CAAcnF,KAAK,eAAe+J,UAAWb,KAC7C,cAAC,IAAD,CAAOlJ,KAAK,eAAe+J,UAAWxK,KACtC,cAAC,IAAD,CAAUO,GAAG,eAGrB,cAACqK,GAAD,CAAQ7B,MAAO,CAAEoC,UAAW,UAA5B,8B,GAtBA/L,a,qCCFpBgM,KAAOC,OAAO,SAcCC,OAbf,WACE,OACE,cAAC,IAAD,CAAgBD,OAAQE,KAAxB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9K,KAAK,SAAS+J,UAAWgB,GAAW,UAC3C,cAAC,IAAD,CAAO/K,KAAK,IAAI+J,UAAWiB,IAAW,aCb1C3R,GAAOoB,IACbkI,EAAWtJ,KAAOA,GAClB4R,IAAS3F,OACP,cAAC,GAAD,IACA4F,SAASC,eAAe,W","file":"static/js/main.7121ffa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/log.30d6fa83.jpg\";","/**\n * \n */\nconst USER_KEY = 'user';\nconst Token='token';\n\nexport default {\n    setUser(user) {\n        localStorage.setItem(USER_KEY, JSON.stringify(user));\n    },\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(USER_KEY));\n    },\n\n    removeUser() {\n        localStorage.removeItem(USER_KEY);\n    },\n\n    //token\n    setToken(token){\n           localStorage.setItem(Token, token);\n    },\n\n    getToken() {\n            return localStorage.getItem(Token);\n    },\n\n    removeToken() {\n            localStorage.removeItem(Token);\n    },\n\n}","import axios from 'axios'\nimport { message } from 'antd';\nimport storageUtil from '../utils/storageUtil'\n\nexport default function ajax(url, data, type) {\n    let promise;\n\n    return new Promise((resolve, reject) => {\n        if (type === \"GET\") {\n            promise = axios({\n                method: 'get',\n                url: url,\n                params: data,\n                headers: { 'authorization': storageUtil.getToken('token') }\n            })\n        } else if (type === \"POST\") {\n            promise = axios({\n                method: 'post',\n                url: url,\n                data: data,\n                headers: { 'authorization': storageUtil.getToken('token') }\n            })\n        } else if (type === \"DELETE\") {\n            promise = axios({\n                method: 'delete',\n                url: url,\n                data: data,\n                headers: { 'authorization': storageUtil.getToken('token') }\n            })\n        } else if (type === \"PUT\") {\n            promise = axios({\n                method: 'put',\n                url: url,\n                data: data,\n                headers: { 'authorization': storageUtil.getToken('token') }\n            })\n        } else {\n            promise = axios.post(url, data)\n        }\n\n        promise.then(response => {\n            resolve(response.data)\n        }).catch(error => {\n            reject(error);\n            message.error(\"请求出错：\" + error.msg);\n            console.log(error.msg)\n        })\n    })\n\n}","import ajax from './ajax'\nimport jsonp from 'jsonp'\n\n//登录 注意：加token会拦截\nexport const reqLogin = (data) => ajax('/api/login', data, null);\n\n//天气\nexport const reqWeather = (cityCode) => {\n    return new Promise((resolve, reject) => {\n        const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=5b7a9d03558f93310350bc0849f3488f`;\n        jsonp(url, {}, (error, data) => {\n            if (!error && data.status === \"1\" && data.lives.length > 0) {\n                const { weather, reporttime } = data.lives[0];\n                resolve({ weather, reporttime })\n            } else {\n                console.log(\"获取天气信息失败\")\n            }\n        })\n    })\n\n\n}\n\n// 用户列表\nexport const reqUserList = (data) => ajax('/api/rbac/systemUser', data, 'GET')\n\n//添加用户\nexport const reqUserAdd = (data) => ajax('/api/rbac/systemUser', data, 'POST')\n\n//删除用户\nexport const reqUserDelete = (data) => ajax('/api/rbac/systemUser', data, 'DELETE')\n\n//编辑用户\nexport const reqUserEdit = (data) => ajax('/api/rbac/systemUser', data, 'PUT')\n\n//编辑用户状态\nexport const reqUserStatusEdit = (data) => ajax('/api/rbac/user/updateStatus', data, 'PUT')\n\n//查询用户信息\nexport const reqUserGet = (data) => ajax('/api/rbac/user/getUser/' + data, null, 'GET')\n\n\n//--------------------------角色模块--------------------------------------------\n\n// 角色列表(添加用户时使用)\nexport const reqRoleList = (data) => ajax('/api/rbac/systemRole', data, 'GET')\n\n//树\nexport const reqRoleTree = () => ajax('/api/rbac/systemRole/getTree', null, 'GET')\n\n//添加\nexport const reqRoleAdd = (data) => ajax('/api/rbac/systemRole', data, 'POST')\n\n\n//--------------------------菜单模块--------------------------------------------\n\n\n// 菜单列表\nexport const reqMenuList = (data) => ajax('/api/rbac/systemMenu', data, 'GET')\n\n// 菜单树\nexport const reqMenuTree = () => ajax('/api/rbac/systemMenu/getTree', null, 'GET')\n\n//添加\nexport const reqMenuAdd = (data) => ajax('/api/rbac/systemMenu', data, 'POST')\n\n//删除\nexport const reqMenuDelete = (data) => ajax('/api/rbac/systemMenu', data, 'DELETE')\n\n//编辑\nexport const reqMenuEdit = (data) => ajax('/api/rbac/systemMenu', data, 'PUT')","export default {\n    user: {}\n}","import React, { Component } from 'react';\nimport jwt_decode from 'jwt-decode'\n\n// import { Redirect } from 'react-router-dom'\nimport { Form, Input, Button, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n// import Login from './login'\nimport './login.css';\nimport logo from '../../assets/images/log.jpg';\nimport { reqLogin } from '../../api/api'\nimport memoryUtil from '../../utils/memoryUtil'\nimport storageUtil from '../../utils/storageUtil'\n\n\nclass login extends Component {\n\n    formRef = React.createRef();\n\n    onFinish = async values => {\n        console.log(values);\n\n        const result = await reqLogin(values);\n        if (result.code === 200) {\n           \n            message.success(\"登录成功\");\n            const userToken = result.data;\n            let user=jwt_decode(userToken);\n            // memoryUtil.user = user;\n            storageUtil.setUser(user);\n            storageUtil.setToken(userToken);\n            let user1=storageUtil.getUser();\n            console.log(\"登录后user:\"+JSON.stringify(user1))\n            this.props.history.replace('/');\n        } else {\n            message.error(\"登录失败\");\n        }\n        // message.success(\"登录成功\");\n        // this.props.history.replace('/');\n\n    }\n\n    onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    render() {\n        // const user = memoryUtil.user;\n        // if (user && user.id) {\n        //     return <Redirect to='./loi' />\n        // }\n\n        return (\n            <div className=\"login\">\n                <header className=\"login-header\">\n                    <h1>Mirror6-rbac</h1>\n                </header>\n                <section className=\"login-content\">\n                    <h2>用户登录</h2>\n                    <Form\n                        ref={this.formRef}\n                        name=\"normal_login\"\n                        className=\"login-form\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={this.onFinish}\n                        onFinishFailed={this.onFinishFailed}\n                    >\n                        <Form.Item\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入账号!'\n                                },\n                            ]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"账号\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入密码!'\n                                },\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"密码\"\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                                <Checkbox>记住我</Checkbox>\n                            </Form.Item>\n\n                            <a className=\"login-form-forgot\" href=\"\">忘记密码</a>\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\n                        </Form.Item>\n                    </Form>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default login;","import {\n    DashboardOutlined,\n    SettingOutlined,\n    UserOutlined,\n    TeamOutlined,\n    TableOutlined,\n    // SolutionOutlined,\n    Loading3QuartersOutlined\n} from '@ant-design/icons';\nimport React from 'react';\n\nconst menuList = [\n    {\n        title: \"首页\",\n        key: \"/home\",\n        url: \"/home\",\n        icon: <DashboardOutlined />\n    },\n    {\n        title: \"系统信息\",\n        key: \"/system\",\n        icon: <SettingOutlined />,\n        children: [\n            {\n                title: \"用户管理\",\n                key: \"/system/user\",\n                url: \"/system/user\",\n                icon: <UserOutlined />\n            },\n            {\n                title: \"角色管理\",\n                key: \"/system/role\",\n                url: \"/system/role\",\n                icon: <TeamOutlined />\n            },\n            {\n                title: \"权限管理\",\n                key: \"/system/menu\",\n                url: \"/system/menu\",\n                icon: <TeamOutlined />\n            }\n        ]\n    },\n    {\n        title: \"基础信息\",\n        key: \"basic\",\n        icon: <TableOutlined />,\n        children: [\n            {\n                title: \"教师信息\",\n                key: \"teacher\",\n                url: \"/basic/teacher\",\n                icon: <Loading3QuartersOutlined />\n            },\n            {\n                title: \"学生信息\",\n                key: \"student\",\n                url: \"/basic/student\",\n                icon: <Loading3QuartersOutlined />\n            }\n        ]\n    }\n]\n\nexport default menuList","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom'\nimport { Menu } from 'antd';\nimport './nav.css';\nimport logo from '../../assets/images/log.jpg';\nimport menuList from '../../config/menuConfig'\n\n\nconst { SubMenu } = Menu;\nclass Nav extends Component {\n\n    state = {\n        collapsed: false,\n    };\n\n    //map+递归\n    getMenuNodes_map = (menuList) => {\n        return menuList.map(item => {\n            if (!item.children) {\n                return (\n                    <Menu.Item key={item.key} >\n                        {item.icon}\n                        <Link to={item.url}>{item.title}</Link>\n                    </Menu.Item>\n                )\n            } else {\n                return (\n                    <SubMenu key={item.key} icon={item.icon} title={item.title}>\n                        {this.getMenuNodes_map(item.children)}\n                    </SubMenu>\n                )\n            }\n\n        })\n    }\n\n    //reduce+递归\n    getMenuNodes_reduce = (menuList) => {\n\n        const path = this.props.location.pathname;\n\n        return menuList.reduce((pre, item) => {\n            //向pre添加<Menu.Item>\n            //向pre添加<SubMenu>\n            if (!item.children) {\n                pre.push(\n                    (\n                        <Menu.Item key={item.key} >\n                            {item.icon}\n                            <Link to={item.url}>{item.title}</Link>\n                        </Menu.Item>\n                    )\n                )\n            } else {\n                //查找一个与当前路径匹配的子item\n                const cItem = item.children.find(cItem => cItem.key === path)\n                //如果存在，说明当前item的子列表需要打开\n                if (cItem) {\n                    this.openKey = item.key;\n                }\n                pre.push(\n                    (\n                        <SubMenu key={item.key} icon={item.icon} title={item.title}>\n                            {this.getMenuNodes_map(item.children)}\n                        </SubMenu>\n                    )\n                )\n            }\n            return pre;\n        }, [])\n    }\n\n    componentWillMount() {\n        this.menuNodes = this.getMenuNodes_reduce(menuList);\n    }\n\n    render() {\n        const path = this.props.location.pathname;\n        const openKey = this.openKey;\n         \n        return (\n            <div>\n                <div className=\"nav\">\n                    <Link to='/home' className=\"nav-header\">\n                        <h1>RBAC</h1>\n                    </Link>\n\n                    <Menu\n                        selectedKeys={[path]}\n                        defaultOpenKeys={[openKey]}\n                        mode=\"inline\"\n                        theme=\"dark\"\n                    >\n                        {\n                            this.menuNodes\n                        }\n\n                    </Menu>\n                </div>\n            </div>\n\n        );\n    }\n}\n\n//withRouter高阶组件：包装非路由组件，返回一个新的组件。\n//新的组件向非路由组件传递3个属性：history、location、match\nexport default withRouter(Nav)\n// export default Nav","import React from 'react';\nimport './button.css'\n\n//外形像链接的按钮\nexport default function LinkButton(props) {\n    return <button {...props} className=\"link-button\"></button>\n}","//时间戳-> 2019-03-07 12:00:00\nexport function formatDate(time) {\n    if (!time) { return \"\" }\n    let now = new Date(time);\n    var year = now.getFullYear();\n    var month = now.getMonth() + 1;\n    var date = now.getDate();\n    var hour = now.getHours();\n    var minute = now.getMinutes();\n    var second = now.getSeconds();\n    return year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minute + \":\" + second;\n}\n//Thu Mar 07 2019 12:00:00 GMT+0800 (中国标准时间)-> 2019-03-07 12:00:00\nexport function parseDate(now) {\n    if (!now) { return \"\" }\n    var year = now.getFullYear();\n    var month = now.getMonth() + 1;\n    var date = now.getDate();\n    var hour = now.getHours();\n    var minute = now.getMinutes();\n    var second = now.getSeconds();\n    return year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minute + \":\" + second;\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport LinkButton from '../button/button'\nimport { reqWeather } from '../../api/api'\nimport { formatDate } from '../../utils/dateUtil'\nimport memoryUtil from '../../utils/memoryUtil'\nimport storageUtil from '../../utils/storageUtil'\nimport menuList from '../../config/menuConfig'\nimport './header.css'\n\nclass Header extends Component {\n\n    state = {\n        currentTime: formatDate(Date.now()),\n        weather: \"\"\n    }\n\n    getTime = () => {\n        this.interval = setInterval(() => {\n            const currentTime = formatDate(Date.now());\n            this.setState({ currentTime })\n        }, 1000)\n    }\n\n    getWeather = async () => {\n        const { weather } = await reqWeather(330100);\n        this.setState({ weather })\n    }\n\n    getTitle = () => {\n        const path = this.props.location.pathname;\n        let title;\n        menuList.forEach(item => {\n            if (item.url === path) {\n                title = item.title\n            } else if (item.children) {\n                const cItem = item.children.find(cItem => path.indexOf(cItem.url) === 0)\n                if (cItem) {\n                    title = cItem.title\n                }\n            }\n        })\n        return title;\n    }\n\n    logout = () => {\n        Modal.confirm({\n            // title: 'Do you Want to delete these items?',\n            icon: <ExclamationCircleOutlined />,\n            content: '确认退出吗？',\n            onOk: () => {\n                console.log('OK');\n                storageUtil.removeUser();\n                memoryUtil.user = {}\n                this.props.history.replace(\"/login\");\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n    //第一次render调用\n    componentDidMount() {\n        this.getTime();\n        this.getWeather();\n    }\n\n    //当前组件卸载前调用\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n\n        const { currentTime, weather } = this.state;\n        // const { username } = memoryUtil.user.username;\n        const title = this.getTitle();\n\n        return (\n            <div className=\"header\">\n                <div className=\"header-top\">\n                    <span>欢迎，超级管理员</span>\n                    <LinkButton onClick={this.logout} >退出</LinkButton>\n                </div>\n                <div className=\"header-bottom\">\n                    <div className=\"header-bottom-left\">{title}</div>\n                    <div className=\"header-bottom-right\">\n                        <span>{currentTime}</span>\n                        <span>{weather}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Header);","import React, { Component } from 'react';\nimport './home.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"home\">\n                欢迎使用Mirror6-rbac\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Form, Input, Radio, TreeSelect } from 'antd'\nimport { reqRoleList } from '../../../api/api.js'\n\nconst FormItem = Form.Item;\n\nclass UserAdd extends Component {\n\n    addRef = React.createRef();\n\n    state = {\n        treeData: []\n    }\n\n    getTreeData = async () => {\n\n        const result = await reqRoleList();\n        console.log(\"1:\"+result);\n        if (result.code === 200) {\n            const data = result.data;\n            // if (null != data && undefined != data) {\n                this.setState({\n                    treeData: data,\n                })\n            // }\n\n        }\n    }\n\n    componentDidMount() {\n        this.getTreeData();\n    }\n\n    render() {\n\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 }\n        };\n\n        const { treeData } = this.state;\n\n\n        return (\n\n            <Form {...formItemLayout} ref={this.addRef}  >\n\n                <FormItem name=\"account\" label=\"账号\" rules={[\n                    {\n                        required: true,\n                        message: '请输入账号',\n                    },\n                    {\n                        pattern: new RegExp(/^[0-9]\\d*$/, \"g\"),\n                        message: '账号由数字组成',\n                    },\n                ]} >\n                    <Input placeholder=\"请输入账号\" />\n                </FormItem>\n\n                <FormItem name=\"name\" label=\"姓名\" rules={[\n                    {\n                        required: true,\n                        message: '请输入姓名',\n                    },\n                ]} >\n                    <Input placeholder=\"请输入姓名\" />\n                </FormItem>\n\n                <FormItem name=\"gender\" label=\"性别\">\n                    <Radio.Group>\n                        <Radio value=\"1\">男</Radio>\n                        <Radio value=\"0\">女</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n                <FormItem name=\"tel\" label=\"手机号码\" >\n                    <Input placeholder=\"请输入手机号码\" />\n                </FormItem>\n\n                <FormItem name=\"email\" label=\"电子邮箱\" rules={[\n                    {\n                        type: 'email',\n                        message: '请输入正确的邮箱',\n                    },\n                ]} >\n                    <Input placeholder=\"请输入电子邮箱\" />\n                </FormItem>\n\n                <Form.Item name=\"roleIds\" label=\"角色\" rules={[\n                    {\n                        required: true,\n                    },\n                ]} >\n                    <TreeSelect\n                        allowClear=\"true\"\n                        treeCheckable=\"true\"\n                        treeData={treeData}\n                        placeholder=\"请选择角色\"\n                        treeDefaultExpandAll\n                        showCheckedStrategy=\"SHOW_PARENT\"\n                    />\n\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default UserAdd;","import React, { Component } from 'react';\nimport { Form, Input, Radio, TreeSelect,Modal } from 'antd'\nimport { reqRoleList } from '../../../api/api.js'\n\nconst FormItem = Form.Item;\n\nclass UserEdit extends Component {\n\n    editRef = React.createRef();\n\n    state = {\n        treeData: [],\n        // treeData1: [{ title: \"普通角色\", value: \"1305056278851444738\", key: \"1305056278851444738\" },\n        // { title: \"学生管理员\", value: \"1305130522406924290\", key: \"1305130522406924290\" }, { title: \"教师管理员\", value: \"1306882513755795458\", key: \"1306882513755795458\" }],\n        value: undefined,\n        // value1: [\"1305056278851444738\"]\n    }\n\n    getTreeData = async () => {\n        const result = await reqRoleList();\n        if (result.code === 200) {\n            const data = result.data;\n            console.log(data)\n            this.setState({\n                treeData: data,\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.getTreeData();\n    }\n\n    componentDidUpdate() {\n        const { userData } = this.props;\n        this.editRef.current.setFieldsValue({ ...userData });\n    }\n\n    UNSAFE_componentWillReceiveProps(){\n        const { userData } = this.props;\n\n        this.setState({\n            value: userData.roleIds\n        })\n    }\n\n\n    render() {\n\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 }\n        };\n\n        const { treeData, value, treeData1, value1 } = this.state;\n\n        return (\n            <Form {...formItemLayout} ref={this.editRef}  >\n                <FormItem name=\"id\" label=\"主键\" hidden>\n                    <Input />\n                </FormItem>\n\n                <FormItem name=\"account\" label=\"账号\" >\n                    <Input placeholder=\"请输入账号\" disabled />\n                </FormItem>\n\n                <FormItem name=\"name\" label=\"姓名\" rules={[\n                    {\n                        required: true,\n                        message: '请输入姓名',\n                    },\n                ]} >\n                    <Input placeholder=\"请输入姓名\" />\n                </FormItem>\n\n                <FormItem name=\"gender\" label=\"性别\">\n                    <Radio.Group>\n                        <Radio value=\"1\">男</Radio>\n                        <Radio value=\"0\">女</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n                <FormItem name=\"tel\" label=\"手机号码\" >\n                    <Input placeholder=\"请输入手机号码\" />\n                </FormItem>\n\n                <FormItem name=\"email\" label=\"电子邮箱\" rules={[\n                    {\n                        type: 'email',\n                        message: '请输入正确的邮箱',\n                    },\n                ]} >\n                    <Input placeholder=\"请输入电子邮箱\" />\n                </FormItem>\n                <FormItem name=\"roleIds\" label=\"角色\">\n                    <TreeSelect\n                        allowClear=\"true\"\n                        treeCheckable=\"true\"\n                        treeData={treeData}\n                        value={value}\n                        showCheckedStrategy=\"SHOW_PARENT\"\n                    />\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default UserEdit;","import React from 'react';\nimport {Form, Input, Modal, Radio, TreeSelect} from 'antd'\nimport {reqRoleTree} from '../../../api/api.js'\n\n\nconst FormItem = Form.Item;\nconst formItemLayout = {\n    labelCol: {span: 6},\n    wrapperCol: {span: 14}\n};\n\nclass UserModal extends React.Component {\n\n    formRef = React.createRef();\n\n    state = {\n        treeData: []\n    }\n\n    componentDidMount() {\n        this.getTreeData();\n    }\n\n    onOk = () => {\n        let user = this.formRef.current.getFieldsValue();\n        this.props.handleOk(user);\n    }\n\n    getTreeData = async () => {\n        const result = await reqRoleTree();\n        if (result.code === 200) {\n            const data = result.data;\n            console.log(JSON.stringify(data));\n            this.treeFormat(data);\n        }\n    }\n\n    treeFormat = (data) => {\n        data.map((item, index) => {\n            item['title'] = item.name;\n            item['value'] = item.id;\n            item['key'] = item.id;\n            item['children'] = item.childList\n            delete item['id'];\n            delete item['childList'];\n            this.treeFormat(item.children);\n        });\n        this.setState({\n            treeData: data\n        });\n    }\n\n\n    render() {\n\n        const {visible, modalStatus, currentItem} = this.props\n        const {treeData} = this.state\n\n        console.log(\"6:\" + modalStatus)\n        console.log(\"7:\" + JSON.stringify(currentItem))\n        if (modalStatus === 'add') {\n            this.currentItem = null\n\n            // this.formRef.current.setFieldsValue({\n            //     gender: currentItem.gender,\n            // })\n\n        }else{\n            this.currentItem=currentItem\n            // this.currentItem.roleIds=[1]\n        }\n        return (\n\n            <Modal\n                visible={visible}\n                title={`${modalStatus === 'add' ? '添加' : '编辑'}用户`}\n                okText='确定'\n                cancelText='取消'\n                onOk={this.onOk.bind(this)}\n                onCancel={this.props.onCancel}\n            >\n                <Form ref={this.formRef} initialValues={this.currentItem} {...formItemLayout} >\n\n                    <FormItem name=\"id\" label=\"主键\" hidden>\n                        <Input/>\n                    </FormItem>\n\n                    <FormItem name=\"account\" label=\"账号\" rules={[\n                        {\n                            required: true,\n                            message: '请输入账号',\n                        },\n                        {\n                            pattern: new RegExp(/^[0-9]\\d*$/, \"g\"),\n                            message: '账号由数字组成',\n                        },\n                    ]}>\n                        <Input placeholder=\"请输入账号\"/>\n                    </FormItem>\n\n                    <FormItem name=\"name\" label=\"姓名\" rules={[\n                        {\n                            required: true,\n                            message: '请输入姓名',\n                        },\n                    ]}>\n                        <Input placeholder=\"请输入姓名\"/>\n                    </FormItem>\n\n                    <FormItem name=\"gender\" label=\"性别\">\n                        <Radio.Group >\n                            <Radio value={1}>男</Radio>\n                            <Radio value={0}>女</Radio>\n                        </Radio.Group>\n                    </FormItem>\n\n                    <FormItem name=\"tel\" label=\"手机号码\">\n                        <Input placeholder=\"请输入手机号码\"/>\n                    </FormItem>\n\n                    <FormItem name=\"email\" label=\"电子邮箱\" rules={[\n                        {\n                            type: 'email',\n                            message: '请输入正确的邮箱',\n                        },\n                    ]}>\n                        <Input placeholder=\"请输入电子邮箱\"/>\n                    </FormItem>\n\n                    <FormItem name=\"roleIds\" label=\"角色\" rules={[\n                        {\n                            required: true,\n                        },\n                    ]}>\n                        <TreeSelect\n                            allowClear=\"true\"\n                            treeCheckable=\"true\"\n                            treeData={treeData}\n                            placeholder=\"请选择角色\"\n                            value={this.currentItem.roleIds}\n                        />\n\n                    </FormItem>\n\n                </Form>\n            </Modal>\n\n        )\n    }\n}\n\nexport default UserModal;","import React, {Component} from 'react';\nimport {Card, Button, Table, Modal, notification, Space, Switch, Form, Row, Col, Select, Input, DatePicker} from 'antd'\nimport {QuestionCircleOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\n\nimport {formatDate, parseDate} from '../../../utils/dateUtil'\n// import LinkButton from '../../../components/button'\nimport {reqUserList, reqUserAdd, reqUserDelete, reqUserEdit, reqUserStatusEdit, reqUserGet} from '../../../api/api.js'\nimport UserAdd from './userAdd'\nimport UserEdit from './userEdit'\nimport UserModal from './userModal'\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst {RangePicker} = DatePicker;\n\nclass User extends Component {\n\n    // addChild = React.createRef();\n    // editChild = React.createRef();\n    formRef = React.createRef();\n\n\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            selectedRowKeys: [],\n            // 0 不显示添加和修改组件 1 显示添加 2显示修改\n            pagination: {\n                total: 0,\n                current: 1,\n                pageSize: 20,\n                pageSizeOptions: [20, 30, 50, 100],\n                showQuickJumper: true,\n                showSizeChanger: true\n            },\n            modalStatus: 'add',\n            modalIsVisible: false\n        }\n    }\n\n    // state = {\n    //     userList: [],\n    //     //复选框 选择的用户\n    //     selectedRowKeys: [],\n    //     // 0 不显示添加和修改组件 1 显示添加 2显示修改\n    //     showStatus: 0,\n    //     pagination: {\n    //         total: 0,\n    //         current: 1,\n    //         pageSize: 10,\n    //         pageSizeOptions: [5, 10, 20, 50, 100],\n    //         showQuickJumper: true,\n    //         showSizeChanger: true\n    //     },\n\n    // }\n\n    initColumn = () => {\n        this.columns = [\n            {\n                title: '序号',\n                render: (text, record, index) => {\n                    return (\n                        <span>{(this.state.pagination.current - 1) * this.state.pagination.pageSize + (index + 1)}</span>\n                    )\n                }\n            },\n            {\n                title: '账号',\n                dataIndex: 'account',\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n            },\n            // {\n            //     title: '部门',\n            //     dataIndex: 'college',\n            // },\n            {\n                title: '手机号码',\n                dataIndex: 'tel'\n            },\n            {\n                title: '启用状态',\n                dataIndex: 'enabled',\n                render: (text, record, index) => (\n                    <Switch checkedChildren=\"开启\" unCheckedChildren=\"关闭\" checked={text === false ? 0 : 1} defaultChecked\n                            onChange={() => this.onChange(text, record)}/>\n                )\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'gmtCreate',\n                render: (value) => {\n                    return formatDate(value);\n                }\n            },\n            {\n                title: '操作',\n                render: (obj) => (\n                    <span>\n                        <Space>\n                            <Button onClick={() => this.showEdit(obj)}>编辑</Button>\n                            <Button type='danger' onClick={() => this.deleteUser(obj.id)}>删除</Button>\n                        </Space>\n                    </span>\n                )\n            }\n        ]\n    }\n\n    getUserList = async (current = 1, pageSize = 20) => {\n        const {pagination} = this.state;\n\n        const data = this.formRef.current.getFieldsValue();\n        data.pageNum = current;\n        data.pageSize = pageSize;\n\n        const result = await reqUserList(data);\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({\n                list: data,\n                pagination: {\n                    ...pagination,\n                    total: result.data.total,\n                    current: current,\n                    pageSize: pageSize\n                }\n            })\n        }\n    }\n\n    //列表搜索\n    search = async () => {\n        const data = this.formRef.current.getFieldsValue();\n        if (data.gmtCreate) {\n            data.startTime = Date.parse((data.gmtCreate[0]._d))\n            data.endTime = Date.parse((data.gmtCreate[0]._d))\n            data.gmtCreate = null\n        }\n        const result = await reqUserList(data);\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({list: data})\n        }\n    }\n\n\n    //table分页\n    onTableChange = async (page) => {\n        await this.setState({\n            pagination: page\n        })\n        this.getUserList(page.current, page.pageSize);\n    }\n\n    //修改用户状态\n    onChange = async (text, record) => {\n\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <ExclamationCircleOutlined/>,\n            content: '您确定修改启用状态吗？',\n            onOk: async () => {\n                record.enabled = !record.enabled\n                const result = await reqUserEdit(record);\n                if (result.code === 200) {\n\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.getUserList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    handleCancel = () => {\n        this.setState({\n            modalIsVisible: false\n        })\n    }\n\n    //显示添加组件\n    showAdd = () => {\n        console.log(this.state);\n        this.setState({\n            modalStatus: 'add',\n            modalIsVisible: true\n        })\n    }\n\n    //显示编辑组件\n    showEdit = async (data) => {\n\n        this.setState({\n            modalStatus: 'edit',\n            modalIsVisible: true\n        })\n\n        this.editData = data;\n        console.log(JSON.stringify(this.editData)+ \"：编辑显示\")\n\n    }\n\n\n    //确定回调\n    handleOk = (params) => {\n        var status = this.state.modalStatus;\n        console.log(params, status)\n        if (\"add\" === status) {\n            this.addUser(params);\n            // this.formRef.current.resetFields()\n        } else {\n            this.editUser(params);\n        }\n    }\n\n    //添加方法\n    addUser = async (data) => {\n        const result = await reqUserAdd(data);\n        if (result.code === 200) {\n            this.setState({\n                modalIsVisible: false\n            })\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.getUserList();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n\n    //编辑信息\n    editUser = async (data) => {\n        const result = await reqUserEdit(data);\n        if (result.code === 200) {\n            this.setState({\n                modalIsVisible: false\n            })\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.getUserList();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n    //删除信息\n    deleteUser = (index) => {\n\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <QuestionCircleOutlined/>,\n            content: '您确定删除此条内容吗？',\n            onOk: async () => {\n                var ids = new Array();\n                ids[0] = index;\n                const result = await reqUserDelete(ids);\n                if (result.code === 200) {\n\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.getUserList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    deleteBatch = () => {\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <QuestionCircleOutlined/>,\n            content: `您确定删除${this.state.selectedRowKeys.length}项吗？`,\n            onOk: async () => {\n\n                const ids = this.state.selectedRowKeys;\n\n                const result = await reqUserDelete(ids);\n                if (result.code === 200) {\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.setState({\n                        selectedRowKeys: []\n                    });\n                    this.getUserList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    componentWillMount() {\n        this.initColumn();\n    }\n\n    componentDidMount() {\n        this.getUserList();\n    }\n\n    resetSearch = async () => {\n        this.formRef.current.resetFields()\n        const result = await reqUserList({pageNum: 1, pageSize: 10});\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({userList: data})\n        }\n    }\n\n    render() {\n\n        const editData = this.editData;\n        const {list, selectedRowKeys, pagination, modalIsVisible, modalStatus} = this.state;\n\n\n        const rowSelection = {\n            selectedRowKeys: selectedRowKeys,\n            onChange: (selectedRowKeys) => this.setState({selectedRowKeys})\n        }\n\n        return (\n            <Card>\n                <Form\n                    ref={this.formRef}\n                    style={{marginBottom: 16}}\n                >\n                    <Row gutter={24}>\n                        <Col span={5}>\n                            <FormItem name=\"name\">\n                                <Input placeholder=\"用户姓名\" allowClear onChange={this.search}/>\n                            </FormItem>\n                        </Col>\n                        <Col span={5}>\n                            <FormItem name=\"tel\">\n                                <Input placeholder=\"手机号码\" allowClear onChange={this.search}/>\n                            </FormItem>\n                        </Col>\n                        <Col span={5}>\n                            <FormItem name=\"enabled\">\n                                <Select placeholder=\"启用状态\" allowClear onChange={this.search}>\n                                    <Option value=\"1\">开启</Option>\n                                    <Option value=\"0\">关闭</Option>\n                                </Select>\n                            </FormItem>\n                        </Col>\n                        <Col span={6}>\n                            <FormItem name=\"gmtCreate\">\n                                <RangePicker allowClear onChange={this.search}/>\n                            </FormItem>\n                        </Col>\n                    </Row>\n                </Form>\n                <span>\n                    <Space>\n                        <Button type=\"primary\" onClick={this.showAdd}>添加用户</Button>\n                        <Button type=\"danger\" disabled={!selectedRowKeys.length}\n                                onClick={this.deleteBatch}>批量删除</Button>\n                    </Space>\n                </span>\n                <Table\n                    rowSelection={rowSelection}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                    dataSource={list}\n                    pagination={pagination}\n                    onChange={this.onTableChange}\n                    style={{marginTop: 10}}/>\n                {\n                    modalIsVisible &&\n                    <UserModal visible={modalIsVisible} modalStatus={modalStatus} currentItem={editData}\n                               onCancel={this.handleCancel} handleOk={this.handleOk}/>\n                }\n            </Card>\n        );\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Input, Modal, notification } from 'antd'\nimport { reqRoleAdd } from '../../../api/api'\nconst FormItem = Form.Item;\n\nclass RoleAdd extends React.Component {\n\n    formRef = React.createRef();\n\n    state = {}\n\n    //添加验证\n    handleOk = () => {\n        const ref = this.formRef.current;\n        this.props.toggleVisible(0);\n        ref.validateFields()\n            .then(values => {\n                console.log(values)\n                ref.resetFields();\n                this.addRole(values);\n            })\n            .catch(errorInfo => {\n                console.log(errorInfo)\n            });\n    }\n\n    //添加方法\n    addRole = async (data) => {\n        const result = await reqRoleAdd(data);\n        if (result.code === 200) {\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.props.onRefresh();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n    //取消\n    onCancel = () => {\n        this.formRef.current.resetFields()\n        this.props.toggleVisible(0);\n    }\n\n    render() {\n\n        const { visible } = this.props\n\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 }\n        };\n\n        return (\n            <Modal visible={visible === 1} title=\"添加角色\" okText='确定'\n                cancelText='取消' onOk={this.handleOk} onCancel={this.onCancel} >\n\n                <Form ref={this.formRef} {...formItemLayout} >\n\n                    <FormItem name=\"name\" label=\"角色名称\" rules={[\n                        {\n                            required: true,\n                            message: '请输入角色名称',\n                        },\n                    ]} >\n                        <Input placeholder=\"请输入角色名称\" />\n                    </FormItem>\n\n                    <FormItem name=\"description\" label=\"描述信息\" rules={[\n                        {\n                            required: true,\n                            message: '请输入描述信息',\n                        },\n                    ]} >\n                        <Input placeholder=\"请输入描述信息\" />\n                    </FormItem>\n\n                    <FormItem name=\"sort\" label=\"排序码\" >\n                        <Input placeholder=\"请输入排序码\" />\n                    </FormItem>\n\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default RoleAdd;","import React, { Component } from 'react';\nimport { Card, Button, Table } from 'antd'\n\nimport { reqRoleList } from '../../../api/api.js'\n\nimport RoleAdd from '../role/roleAdd'\n\nclass Role extends Component {\n\n    state = {\n        roleList: [],\n        // 0 不显示添加和修改组件 1 显示添加 2显示修改\n        showStatus: 0,\n    }\n\n    initColumn = () => {\n        this.columns = [\n            {\n                title: '角色名称',\n                dataIndex: 'name',\n            },\n            {\n                title: '描述信息',\n                dataIndex: 'description',\n            },\n            {\n                title: '排序码',\n                dataIndex: 'sort',\n            },\n            {\n                title: '启用状态',\n                dataIndex: 'enabled',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'gmtCreate',\n            }\n        ]\n    }\n\n    getRoleList = async () => {\n        const result = await reqRoleList();\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({ roleList: data })\n        }\n    }\n\n    //显示添加组件\n    toggleVisible = (status) => {\n        this.setState({\n            showStatus: status\n        })\n    }\n\n    componentWillMount() {\n        this.initColumn();\n    }\n\n    componentDidMount() {\n        this.getRoleList();\n    }\n\n    render() {\n\n        const { roleList, showStatus } = this.state;\n        const title = (\n            <span>\n                <Button type=\"primary\" onClick={() =>this.toggleVisible(1)}>新增</Button>\n            </span>\n        )\n\n        return (\n            <Card title={title}>\n                <Table\n                    rowKey=\"id\"\n                    rowSelection={{ type: \"checkout\" }}\n                    columns={this.columns}\n                    dataSource={roleList} />\n                <RoleAdd visible={showStatus} toggleVisible={this.toggleVisible} onRefresh={this.getRoleList} />\n            </Card>\n        );\n    }\n}\n\nexport default Role;","import React from 'react';\nimport { Form, Input, Modal, TreeSelect } from 'antd'\nimport { reqMenuTree } from '../../../api/api.js'\n\n\nconst FormItem = Form.Item;\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 }\n};\n\nclass MenuModal extends React.Component {\n\n    formRef = React.createRef();\n\n    state = {\n        treeData: []\n    }\n\n    componentDidMount() {\n        this.getTreeData();\n    }\n\n    onOk = () => {\n        let user = this.formRef.current.getFieldsValue();\n        this.props.handleOk(user);\n    }\n\n    getTreeData = async () => {\n        const result = await reqMenuTree();\n        if (result.code === 200) {\n            const data = result.data;\n            this.treeFormat(data);\n        }\n    }\n\n    treeFormat = (data) => {\n        data.map((item, index) => {\n            item['value'] = item.id;\n            item['key'] = item.id;\n            item['children'] = item.childList\n            delete item['id'];\n            delete item['childList'];\n            this.treeFormat(item.children);\n        });\n        this.setState({\n            treeData: data\n        });\n    }\n\n\n    render() {\n\n        const { visible, modalStatus, currentItem } = this.props\n        const { treeData } = this.state\n\n\n        return (\n\n            <Modal\n                visible={visible}\n                title={`${modalStatus === 'add' ? '添加' : '编辑'}菜单`}\n                okText='确定'\n                cancelText='取消'\n                onOk={this.onOk.bind(this)}\n                onCancel={this.props.onCancel}\n            >\n                <Form ref={this.formRef} initialValues={currentItem} {...formItemLayout} >\n\n                    <FormItem name=\"id\" label=\"主键\" hidden>\n                        <Input />\n                    </FormItem>\n\n                    <FormItem name=\"parentId\" label=\"父级菜单\"\n                        rules={[{ required: true, message: '请选择父级菜单' }]}>\n                        <TreeSelect\n                            treeData={treeData}\n                        />\n                    </FormItem>\n\n                    <FormItem name=\"title\" label=\"菜单名称\" rules={[\n                        {\n                            required: true,\n                            message: '请输入菜单名称',\n                        }\n                    ]} >\n                        <Input placeholder=\"请输入菜单名称\" />\n                    </FormItem>\n\n                    <FormItem name=\"description\" label=\"描述信息\" >\n                        <Input placeholder=\"请输入描述信息\" />\n                    </FormItem>\n\n                    <FormItem name=\"url\" label=\"url\" rules={[\n                        {\n                            required: true,\n                            message: '请输入url',\n                        }\n                    ]} >\n                        <Input placeholder=\"请输入url\" />\n                    </FormItem>\n\n                    <FormItem name=\"icon\" label=\"图标信息\" >\n                        <Input placeholder=\"请输入图标信息\" />\n                    </FormItem>\n\n                </Form>\n            </Modal>\n\n        )\n    }\n}\n\nexport default MenuModal;","import React, { Component } from 'react';\nimport { Card, Button, Table, Modal, notification, Space, Switch, Form, Row, Col, Select, Input, DatePicker } from 'antd'\nimport { QuestionCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport { formatDate, parseDate } from '../../../utils/dateUtil'\n// import LinkButton from '../../../components/button'\nimport { reqMenuList, reqMenuAdd, reqMenuDelete, reqMenuEdit } from '../../../api/api.js'\nimport MenuModal from './menuModal'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { RangePicker } = DatePicker;\nclass Menu extends Component {\n\n    formRef = React.createRef();\n\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            selectedRowKeys: [],\n            // 0 不显示添加和修改组件 1 显示添加 2显示修改\n            pagination: {\n                total: 0,\n                current: 1,\n                pageSize: 15,\n                pageSizeOptions: [15, 30, 50, 100],\n                showQuickJumper: true,\n                showSizeChanger: true\n            },\n            modalStatus: 'add',\n            modalIsVisible: false\n        }\n    }\n\n    initColumn = () => {\n        this.columns = [\n            {\n                title: '序号',\n                render: (text, record, index) => {\n                    return (\n                        <span>{(this.state.pagination.current - 1) * this.state.pagination.pageSize + (index + 1)}</span>\n                    )\n                }\n            },\n            {\n                title: '菜单名称',\n                dataIndex: 'title',\n            },\n            {\n                title: '描述信息',\n                dataIndex: 'description',\n            },\n            {\n                title: 'url',\n                dataIndex: 'url',\n            },\n            {\n                title: '图标',\n                dataIndex: 'iocnPath'\n            },\n            {\n                title: '是否启用',\n                dataIndex: 'enabled',\n                render: (text, record, index) => (\n                    <Switch checkedChildren=\"开启\" unCheckedChildren=\"关闭\" checked={text === 0 ? 0 : 1} defaultChecked onChange={() => this.onChange(text, record)} />\n                )\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'gmtCreate',\n                render: (value) => {\n                    return formatDate(value);\n                }\n            },\n            {\n                title: '操作',\n                render: (obj) => (\n                    <span>\n                        <Space>\n                            <Button onClick={() => this.showEdit(obj)}>编辑</Button>\n                            <Button type='danger' onClick={() => this.deleteMenu(obj.id)}>删除</Button>\n                        </Space>\n                    </span>\n                )\n            }\n        ]\n    }\n\n    getMenuList = async (current = 1, pageSize = 10) => {\n        const { pagination } = this.state;\n\n        const data = this.formRef.current.getFieldsValue();\n        data.pageNum = current;\n        data.pageSize = pageSize;\n\n        const result = await reqMenuList(data);\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({\n                list: data,\n                pagination: {\n                    ...pagination,\n                    total: result.data.total,\n                    current: current,\n                    pageSize: pageSize\n                }\n            })\n        }\n    }\n\n    //列表搜索\n    search = async () => {\n        const data = this.formRef.current.getFieldsValue();\n        if (data.gmtCreate) {\n            data.gmtCreate = parseDate(data.gmtCreate[0]._d) + \"&\" + parseDate(data.gmtCreate[1]._d)\n        }\n        const result = await reqMenuList(data);\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({ list: data })\n        }\n    }\n\n\n    //table分页\n    onTableChange = async (page) => {\n        await this.setState({\n            pagination: page\n        })\n        this.getMenuList(page.current, page.pageSize);\n    }\n\n    //修改启用状态\n    onChange = async (text, record) => {\n\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <ExclamationCircleOutlined />,\n            content: '您确定修改启用状态吗？',\n            onOk: async () => {\n                if (record.enabled === 0) {\n                    record.enabled = 1\n                } else {\n                    record.enabled = 0\n                }\n                const result = await reqMenuEdit(record);\n                if (result.code === 200) {\n\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.getMenuList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    handleCancel = () => {\n        this.setState({\n            modalIsVisible: false\n        })\n    }\n\n    //显示添加组件\n    showAdd = () => {\n        console.log(this.state);\n\n        this.setState({\n            modalStatus: 'add',\n            modalIsVisible: true\n        })\n    }\n\n    //显示编辑组件\n    showEdit = async (data) => {\n\n        this.setState({\n            modalStatus: 'edit',\n            modalIsVisible: true\n        })\n\n        this.editData = data;\n        console.log(this.editData + \"123\")\n    }\n\n    //添加验证\n    handleOk = (params) => {\n        var status = this.state.modalStatus;\n        console.log(params, status)\n        if (\"add\" == status) {\n            this.addMenu(params);\n        } else {\n            this.editMenu(params);\n        }\n    }\n\n    //添加方法\n    addMenu = async (data) => {\n        const result = await reqMenuAdd(data);\n        if (result.code === 200) {\n            this.setState({\n                modalIsVisible: false\n            })\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.getMenuList();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n    //编辑验证\n    handleEdit = () => {\n        const ref = this.editChild.current.editRef.current;\n        ref.validateFields()\n            .then(values => {\n                this.editMenu(values);\n                this.setState({ modalIsVisible: false });\n            })\n            .catch(errorInfo => {\n                console.log(errorInfo)\n            });\n    }\n\n    //编辑信息\n    editMenu = async (data) => {\n        const result = await reqMenuEdit(data);\n        if (result.code === 200) {\n            this.setState({\n                modalIsVisible: false\n            })\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.getMenuList();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n    //删除信息\n    deleteMenu = (index) => {\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <QuestionCircleOutlined />,\n            content: '您确定删除此条内容吗？',\n            onOk: async () => {\n                var ids = new Array();\n                ids[0] = index;\n\n                const result = await reqMenuDelete(ids);\n                if (result.code === 200) {\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.getMenuList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    deleteBatch = () => {\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <QuestionCircleOutlined />,\n            content: `您确定删除${this.state.selectedRowKeys.length}项吗？`,\n            onOk: async () => {\n\n                const ids = this.state.selectedRowKeys;\n                console.log(\"123\" + ids)\n                const result = await reqMenuDelete(ids);\n                if (result.code === 200) {\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.setState({\n                        selectedRowKeys: []\n                    });\n                    this.getMenuList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    componentWillMount() {\n        this.initColumn();\n    }\n\n    componentDidMount() {\n        this.getMenuList();\n    }\n    resetSearch = async () => {\n        this.formRef.current.resetFields()\n        const result = await reqMenuList({ pageNum: 1, pageSize: 10 });\n        if (result.code === 200) {\n            const data = result.data.records;\n            this.setState({ list: data })\n        }\n    }\n    render() {\n\n        const editData = this.editData;\n        const { list, selectedRowKeys, pagination, modalIsVisible, modalStatus } = this.state;\n\n        const rowSelection = {\n            selectedRowKeys: selectedRowKeys,\n            onChange: (selectedRowKeys) => this.setState({ selectedRowKeys })\n        }\n\n        return (\n            <Card>\n                <Form\n                    ref={this.formRef}\n                    style={{ marginBottom: 16 }}\n                >\n                    <Row gutter={24}>\n                        <Col span={5}>\n                            <FormItem name=\"title\" label=\"标题\">\n                                <Input placeholder=\"请输入标题\" />\n                            </FormItem>\n                        </Col>\n                        <Col span={5}>\n                            <FormItem name=\"description\" label=\"描述信息\" >\n                                <Input placeholder=\"请输入描述信息\" />\n                            </FormItem>\n                        </Col>\n                        <Col span={5}>\n                            <FormItem name=\"enabled\" label=\"启用状态\">\n                                <Select placeholder=\"请选择\">\n                                    <Option value=\"1\">开启</Option>\n                                    <Option value=\"0\">关闭</Option>\n                                </Select>\n                            </FormItem>\n                        </Col>\n                        <Col span={6}>\n                            <FormItem name=\"gmtCreate\" label=\"创建时间\" >\n                                <RangePicker />\n                            </FormItem>\n                        </Col>\n                        <Col span={24}>\n                            <Space>\n                                <Button type=\"primary\" onClick={this.search}>搜索</Button>\n                                <Button onClick={this.resetSearch}>重置 </Button>\n                            </Space>\n                        </Col>\n                    </Row>\n                </Form>\n                <span >\n                    <Space>\n                        <Button type=\"primary\" onClick={this.showAdd}>新增</Button>\n                        <Button type=\"danger\" disabled={!selectedRowKeys.length} onClick={this.deleteBatch}>批量删除</Button>\n                    </Space>\n                </span>\n                <Table\n                    rowSelection={rowSelection}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                    dataSource={list}\n                    pagination={pagination}\n                    onChange={this.onTableChange}\n                    style={{ marginTop: 10 }} />\n                {\n                    modalIsVisible && <MenuModal visible={modalIsVisible} modalStatus={modalStatus} currentItem={editData} onCancel={this.handleCancel} handleOk={this.handleOk} />\n                }\n\n            </Card >\n        );\n    }\n}\n\nexport default Menu;","import {\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport React, { Component } from 'react';\n// import { connect } from 'react-redux';\nimport storageUtil from '../utils/storageUtil'\n\n\nclass PrivateRoute extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     console.log(\"13:\"+JSON.stringify(this.props.path))\n    //     return;\n    // }\n\n    // componentDidMount() {\n    //     const user = storageUtil.getUser();\n    //     const rol = storageUtil.getUser().rol;\n    //     const path=\"\"+this.props.path;\n    //     console.log(\"存放的user:\"+JSON.stringify( user))\n    //     console.log(\"存放的user url:\"+JSON.stringify( rol))\n    //     console.log(\"菜单url:\"+path)\n    //             this.setState({user:user,path:path})\n    //\n    // }\n\n    render() {\n        const { component: Component, ...rest } = this.props;\n        const rol = storageUtil.getUser().rol;\n        const path=\"\"+this.props.path;\n        const res=path.indexOf(path);\n        console.log(\"rol:\"+JSON.stringify( rol))\n        console.log(\"菜单url:\"+path)\n        console.log(\"res:\"+res)\n\n        return (\n                <Route {...rest} render={props => {\n                    return res!==-1\n                            ?  <Component {...props} />\n                            : <Redirect to=\"/login\" />\n                }} />\n        )\n    }\n\n    // render() {\n    //\n    //     // const user = storageUtil.getUser;\n    //     // console.log(JSON.stringify(user))\n    //     // console.log(\"1:\"+this.props.path)\n    //\n    //\n    //\n    //     // let { log, location, ...other } = this.props;\n    //     let component = res>0  ?\n    //     <Redirect to=\"/home\" /> :\n    //         <Redirect to=\"/home\" />\n    //\n    //     return component;\n    // }\n}\n\n// const mapStateToProps = (state) => {\n//     return state.log\n// }\n\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Layout } from 'antd'\n// import memoryUtil from '../../utils/memoryUtil'\nimport Nav from '../../components/nav/nav'\nimport Header from '../../components/header/header'\nimport Home from '../home/home'\nimport User from '../system/user/user'\nimport Role from '../system/role/role'\nimport Menu from '../system/menu/menu'\nimport PrivateRoute from '../../config/privateRoute'\n\n\nconst { Footer, Sider, Content } = Layout;\n\nclass index extends Component {\n    render() {\n        // const user = memoryUtil.user;\n        // if (!user || !user.id) {\n        //     return <Redirect to='/login' />\n        // }\n        return (\n            <Layout style={{ height: '100%' }}>\n                <Sider>\n                    <Nav />\n                </Sider>\n                <Layout>\n                    <Header >Header</Header>\n                    <Content style={{ margin:20,backgroundColor: '#fff' }}>\n                        <Switch>\n                            <Route path=\"/home\" component={Home}></Route>\n                            <Route path=\"/system/user\" component={User}></Route>\n                            <PrivateRoute path=\"/system/role\" component={Role}></PrivateRoute>\n                            <Route path=\"/system/menu\" component={Menu}></Route>\n                            <Redirect to='/home'></Redirect>\n                        </Switch>\n                    </Content>\n                    <Footer style={{ textAlign: \"center\" }}>Footer</Footer>\n                </Layout>\n            </Layout>\n            // <div>\n            //     hello {user.username}\n            // </div>\n        );\n    }\n}\n\nexport default index;","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { ConfigProvider } from 'antd';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Login from './pages/login/login'\nimport Index from './pages/index/index'\n\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\nfunction App() {\n  return (\n    <ConfigProvider locale={zhCN}>\n      <BrowserRouter>\n        <Switch>\n          <Route path='/login' component={Login} key=\"/login\"></Route>\n          <Route path='/' component={Index} key=\"/\"></Route>\n        </Switch>\n      </BrowserRouter>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport memoryUtil from './utils/memoryUtil'\nimport storageUtil from './utils/storageUtil'\n\nconst user = storageUtil.getUser();\nmemoryUtil.user = user;\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}