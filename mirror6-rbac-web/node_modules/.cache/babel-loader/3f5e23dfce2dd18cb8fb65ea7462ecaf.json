{"ast":null,"code":"var _jsxFileName = \"/Users/mirror6/IdeaProjects/mirror6-rbac0/mirror6-rbac-web/src/config/privateRoute.jsx\";\nimport { Route, Redirect } from 'react-router-dom';\nimport React, { Component } from 'react'; // import { connect } from 'react-redux';\n\nimport storageUtil from '../utils/storageUtil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PrivateRoute extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     console.log(\"13:\"+JSON.stringify(this.props.path))\n  //     return;\n  // }\n  // componentDidMount() {\n  //     const user = storageUtil.getUser();\n  //     const rol = storageUtil.getUser().rol;\n  //     const path=\"\"+this.props.path;\n  //     console.log(\"存放的user:\"+JSON.stringify( user))\n  //     console.log(\"存放的user url:\"+JSON.stringify( rol))\n  //     console.log(\"菜单url:\"+path)\n  //             this.setState({user:user,path:path})\n  //\n  // }\n  render() {\n    const {\n      component: Component,\n      ...rest\n    } = this.props;\n    const rol = storageUtil.getUser().rol;\n    const path = \"\" + this.props.path;\n    const res = path.indexOf(path);\n    console.log(\"rol:\" + JSON.stringify(rol));\n    console.log(\"菜单url:\" + path);\n    console.log(\"res:\" + res);\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        return res !== -1 ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  } // render() {\n  //\n  //     // const user = storageUtil.getUser;\n  //     // console.log(JSON.stringify(user))\n  //     // console.log(\"1:\"+this.props.path)\n  //\n  //\n  //\n  //     // let { log, location, ...other } = this.props;\n  //     let component = res>0  ?\n  //     <Redirect to=\"/home\" /> :\n  //         <Redirect to=\"/home\" />\n  //\n  //     return component;\n  // }\n\n\n} // const mapStateToProps = (state) => {\n//     return state.log\n// }\n\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/mirror6/IdeaProjects/mirror6-rbac0/mirror6-rbac-web/src/config/privateRoute.jsx"],"names":["Route","Redirect","React","Component","storageUtil","PrivateRoute","render","component","rest","props","rol","getUser","path","res","indexOf","console","log","JSON","stringify"],"mappings":";AAAA,SACIA,KADJ,EAEIC,QAFJ,QAGO,kBAHP;AAIA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEjC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAS,EAAEJ,SAAb;AAAwB,SAAGK;AAA3B,QAAoC,KAAKC,KAA/C;AACA,UAAMC,GAAG,GAAGN,WAAW,CAACO,OAAZ,GAAsBD,GAAlC;AACA,UAAME,IAAI,GAAC,KAAG,KAAKH,KAAL,CAAWG,IAAzB;AACA,UAAMC,GAAG,GAACD,IAAI,CAACE,OAAL,CAAaF,IAAb,CAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOC,IAAI,CAACC,SAAL,CAAgBR,GAAhB,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAASJ,IAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOH,GAAnB;AAEA,wBACQ,QAAC,KAAD,OAAWL,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAAI;AAC9B,eAAOI,GAAG,KAAG,CAAC,CAAP,gBACI,QAAC,SAAD,OAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAEG,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFV;AAGH;AAJD;AAAA;AAAA;AAAA;AAAA,YADR;AAOH,GAnCgC,CAqCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnDiC,C,CAsDrC;AACA;AACA;;;AAEA,eAAeJ,YAAf","sourcesContent":["import {\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport React, { Component } from 'react';\n// import { connect } from 'react-redux';\nimport storageUtil from '../utils/storageUtil'\n\n\nclass PrivateRoute extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     console.log(\"13:\"+JSON.stringify(this.props.path))\n    //     return;\n    // }\n\n    // componentDidMount() {\n    //     const user = storageUtil.getUser();\n    //     const rol = storageUtil.getUser().rol;\n    //     const path=\"\"+this.props.path;\n    //     console.log(\"存放的user:\"+JSON.stringify( user))\n    //     console.log(\"存放的user url:\"+JSON.stringify( rol))\n    //     console.log(\"菜单url:\"+path)\n    //             this.setState({user:user,path:path})\n    //\n    // }\n\n    render() {\n        const { component: Component, ...rest } = this.props;\n        const rol = storageUtil.getUser().rol;\n        const path=\"\"+this.props.path;\n        const res=path.indexOf(path);\n        console.log(\"rol:\"+JSON.stringify( rol))\n        console.log(\"菜单url:\"+path)\n        console.log(\"res:\"+res)\n\n        return (\n                <Route {...rest} render={props => {\n                    return res!==-1\n                            ?  <Component {...props} />\n                            : <Redirect to=\"/login\" />\n                }} />\n        )\n    }\n\n    // render() {\n    //\n    //     // const user = storageUtil.getUser;\n    //     // console.log(JSON.stringify(user))\n    //     // console.log(\"1:\"+this.props.path)\n    //\n    //\n    //\n    //     // let { log, location, ...other } = this.props;\n    //     let component = res>0  ?\n    //     <Redirect to=\"/home\" /> :\n    //         <Redirect to=\"/home\" />\n    //\n    //     return component;\n    // }\n}\n\n// const mapStateToProps = (state) => {\n//     return state.log\n// }\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}