{"ast":null,"code":"var _jsxFileName = \"/Users/mirror6/IdeaProjects/mirror6-rbac0/mirror6-rbac-web/src/pages/system/role/role.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Button, Table, Space, notification, Modal } from 'antd';\nimport { reqRoleList, reqUserAdd, reqUserDelete, reqUserEdit, reqUserList } from '../../../api/api.js';\nimport RoleAdd from '../role/roleAdd';\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Role extends Component {\n  constructor() {\n    super();\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '序号',\n        render: (text, record, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (this.state.pagination.current - 1) * this.state.pagination.pageSize + (index + 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this);\n        }\n      }, {\n        title: '角色名称',\n        dataIndex: 'name'\n      }, {\n        title: '描述信息',\n        dataIndex: 'description'\n      }, {\n        title: '排序码',\n        dataIndex: 'sort'\n      }, {\n        title: '启用状态',\n        dataIndex: 'enabled'\n      }, {\n        title: '创建时间',\n        dataIndex: 'gmtCreate'\n      }, {\n        title: '操作',\n        render: obj => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.showEdit(obj),\n              children: \"\\u7F16\\u8F91\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: () => this.deleteUser(obj.id),\n              children: \"\\u5220\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }];\n    };\n\n    this.getRoleList = async (current = 1, pageSize = 20) => {\n      const {\n        pagination\n      } = this.state;\n      const data = this.formRef.current.getFieldsValue();\n      data.pageNum = current;\n      data.pageSize = pageSize;\n      const result = await reqRoleList(data);\n\n      if (result.code === 200) {\n        // const data = result.data.records;\n        const data = result.data;\n        console.log(JSON.stringify(data));\n        this.setState({\n          list: data,\n          pagination: { ...pagination,\n            total: result.data.total,\n            current: current,\n            pageSize: pageSize\n          }\n        });\n      }\n    };\n\n    this.onTableChange = async page => {\n      await this.setState({\n        pagination: page\n      });\n      this.getUserList(page.current, page.pageSize);\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalIsVisible: false\n      });\n    };\n\n    this.showAdd = () => {\n      console.log(this.state);\n      this.setState({\n        modalStatus: 'add',\n        modalIsVisible: true\n      });\n    };\n\n    this.showEdit = async data => {\n      this.setState({\n        modalStatus: 'edit',\n        modalIsVisible: true\n      });\n      this.editData = data;\n      console.log(JSON.stringify(this.editData) + \"：编辑显示\");\n    };\n\n    this.handleOk = params => {\n      var status = this.state.modalStatus;\n      console.log(params, status);\n\n      if (\"add\" === status) {\n        this.addRole(params); // this.formRef.current.resetFields()\n      } else {\n        this.editRole(params);\n      }\n    };\n\n    this.addRole = async data => {\n      const result = await reqRoleAdd(data);\n\n      if (result.code === 200) {\n        this.setState({\n          modalIsVisible: false\n        });\n        notification.success({\n          duration: 2,\n          message: '提示',\n          description: result.msg\n        });\n        this.getRoleList();\n      } else {\n        notification.error({\n          duration: null,\n          message: '提示',\n          description: result.msg\n        });\n      }\n    };\n\n    this.editRole = async data => {\n      const result = await reqRoleEdit(data);\n\n      if (result.code === 200) {\n        this.setState({\n          modalIsVisible: false\n        });\n        notification.success({\n          duration: 2,\n          message: '提示',\n          description: result.msg\n        });\n        this.getRoleList();\n      } else {\n        notification.error({\n          duration: null,\n          message: '提示',\n          description: result.msg\n        });\n      }\n    };\n\n    this.deleteRole = index => {\n      Modal.confirm({\n        title: '提示',\n        okText: '确定',\n        cancelText: '取消',\n        icon: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }, this),\n        content: '您确定删除此条内容吗？',\n        onOk: async () => {\n          var ids = new Array();\n          ids[0] = index;\n          const result = await reqRoleDelete(ids);\n\n          if (result.code === 200) {\n            notification.success({\n              duration: 2,\n              message: '提示',\n              description: result.msg\n            });\n            this.getRoleList();\n          } else {\n            notification.error({\n              duration: null,\n              message: '提示',\n              description: result.msg\n            });\n          }\n        }\n      });\n    };\n\n    this.deleteBatch = () => {\n      Modal.confirm({\n        title: '提示',\n        okText: '确定',\n        cancelText: '取消',\n        icon: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }, this),\n        content: `您确定删除${this.state.selectedRowKeys.length}项吗？`,\n        onOk: async () => {\n          const ids = this.state.selectedRowKeys;\n          const result = await reqRoleDelete(ids);\n\n          if (result.code === 200) {\n            notification.success({\n              duration: 2,\n              message: '提示',\n              description: result.msg\n            });\n            this.setState({\n              selectedRowKeys: []\n            });\n            this.getRoleList();\n          } else {\n            notification.error({\n              duration: null,\n              message: '提示',\n              description: result.msg\n            });\n          }\n        }\n      });\n    };\n\n    this.resetSearch = async () => {\n      this.formRef.current.resetFields();\n      const result = await reqRoleList({\n        pageNum: 1,\n        pageSize: 10\n      });\n\n      if (result.code === 200) {\n        const data = result.data; // const data = result.data.records;\n\n        this.setState({\n          list: data\n        });\n      }\n    };\n\n    this.state = {\n      list: [],\n      selectedRowKeys: [],\n      pagination: {\n        total: 0,\n        current: 1,\n        pageSize: 20,\n        pageSizeOptions: [20, 30, 50, 100],\n        showQuickJumper: true,\n        showSizeChanger: true\n      },\n      modalStatus: 'add',\n      modalIsVisible: false\n    };\n  }\n\n  componentWillMount() {\n    this.initColumn();\n  }\n\n  componentDidMount() {\n    this.getRoleList();\n  }\n\n  render() {\n    // const {roleList, showStatus} = this.state;\n    // const title = (\n    //     <span>\n    //         <Button type=\"primary\" onClick={() => this.toggleVisible(1)}>新增</Button>\n    //     </span>\n    // )\n    const editData = this.editData;\n    const {\n      list,\n      selectedRowKeys,\n      pagination,\n      modalIsVisible,\n      modalStatus\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys: selectedRowKeys,\n      onChange: selectedRowKeys => this.setState({\n        selectedRowKeys\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        rowSelection: rowSelection,\n        columns: this.columns,\n        rowKey: \"id\",\n        dataSource: list,\n        pagination: pagination,\n        onChange: this.onTableChange,\n        style: {\n          marginTop: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Role;","map":{"version":3,"sources":["/Users/mirror6/IdeaProjects/mirror6-rbac0/mirror6-rbac-web/src/pages/system/role/role.jsx"],"names":["React","Component","Card","Button","Table","Space","notification","Modal","reqRoleList","reqUserAdd","reqUserDelete","reqUserEdit","reqUserList","RoleAdd","QuestionCircleOutlined","Role","constructor","formRef","createRef","initColumn","columns","title","render","text","record","index","state","pagination","current","pageSize","dataIndex","obj","showEdit","deleteUser","id","getRoleList","data","getFieldsValue","pageNum","result","code","console","log","JSON","stringify","setState","list","total","onTableChange","page","getUserList","handleCancel","modalIsVisible","showAdd","modalStatus","editData","handleOk","params","status","addRole","editRole","reqRoleAdd","success","duration","message","description","msg","error","reqRoleEdit","deleteRole","confirm","okText","cancelText","icon","content","onOk","ids","Array","reqRoleDelete","deleteBatch","selectedRowKeys","length","resetSearch","resetFields","pageSizeOptions","showQuickJumper","showSizeChanger","componentWillMount","componentDidMount","rowSelection","onChange","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card, Button, Table, Space, notification, Modal} from 'antd'\n\nimport {reqRoleList, reqUserAdd, reqUserDelete, reqUserEdit, reqUserList} from '../../../api/api.js'\n\nimport RoleAdd from '../role/roleAdd'\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\n\nclass Role extends Component {\n\n    formRef = React.createRef();\n\n    constructor() {\n        super();\n        this.state = {\n            list: [],\n            selectedRowKeys: [],\n            pagination: {\n                total: 0,\n                current: 1,\n                pageSize: 20,\n                pageSizeOptions: [20, 30, 50, 100],\n                showQuickJumper: true,\n                showSizeChanger: true\n            },\n            modalStatus: 'add',\n            modalIsVisible: false\n        }\n    }\n\n    initColumn = () => {\n        this.columns = [\n            {\n                title: '序号',\n                render: (text, record, index) => {\n                    return (\n                        <span>{(this.state.pagination.current - 1) * this.state.pagination.pageSize + (index + 1)}</span>\n                    )\n                }\n            },\n            {\n                title: '角色名称',\n                dataIndex: 'name',\n            },\n            {\n                title: '描述信息',\n                dataIndex: 'description',\n            },\n            {\n                title: '排序码',\n                dataIndex: 'sort',\n            },\n            {\n                title: '启用状态',\n                dataIndex: 'enabled',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'gmtCreate',\n            }, {\n                title: '操作',\n                render: (obj) => (\n                    <span>\n                        <Space>\n                            <Button onClick={() => this.showEdit(obj)}>编辑</Button>\n                            <Button type='danger' onClick={() => this.deleteUser(obj.id)}>删除</Button>\n                        </Space>\n                    </span>\n                )\n            }\n        ]\n    }\n\n    getRoleList = async (current = 1, pageSize = 20) => {\n        const {pagination} = this.state;\n\n        const data = this.formRef.current.getFieldsValue();\n        data.pageNum = current;\n        data.pageSize = pageSize;\n\n        const result = await reqRoleList(data);\n        if (result.code === 200) {\n            // const data = result.data.records;\n            const data = result.data;\n            console.log(JSON.stringify(data))\n            this.setState({\n                list: data,\n                pagination: {\n                    ...pagination,\n                    total: result.data.total,\n                    current: current,\n                    pageSize: pageSize\n                }\n            })\n        }\n    }\n\n    // getRoleList = async () => {\n    //     const result = await reqRoleList();\n    //     if (result.code === 200) {\n    //         const data = result.data.records;\n    //         this.setState({roleList: data})\n    //     }\n    // }\n    //列表搜索 todo\n\n    //table分页\n    onTableChange = async (page) => {\n        await this.setState({\n            pagination: page\n        })\n        this.getUserList(page.current, page.pageSize);\n    }\n\n    handleCancel = () => {\n        this.setState({\n            modalIsVisible: false\n        })\n    }\n\n    //显示添加组件\n    showAdd = () => {\n        console.log(this.state);\n        this.setState({\n            modalStatus: 'add',\n            modalIsVisible: true\n        })\n    }\n\n    //显示编辑组件\n    showEdit = async (data) => {\n\n        this.setState({\n            modalStatus: 'edit',\n            modalIsVisible: true\n        })\n\n        this.editData = data;\n        console.log(JSON.stringify(this.editData) + \"：编辑显示\")\n\n    }\n\n    //确定回调\n    handleOk = (params) => {\n        var status = this.state.modalStatus;\n        console.log(params, status)\n        if (\"add\" === status) {\n            this.addRole(params);\n            // this.formRef.current.resetFields()\n        } else {\n            this.editRole(params);\n        }\n    }\n\n    //添加方法\n    addRole = async (data) => {\n        const result = await reqRoleAdd(data);\n        if (result.code === 200) {\n            this.setState({\n                modalIsVisible: false\n            })\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.getRoleList();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n\n    //编辑信息\n    editRole = async (data) => {\n        const result = await reqRoleEdit(data);\n        if (result.code === 200) {\n            this.setState({\n                modalIsVisible: false\n            })\n            notification.success({\n                duration: 2,\n                message: '提示',\n                description: result.msg\n            });\n            this.getRoleList();\n        } else {\n            notification.error({\n                duration: null,\n                message: '提示',\n                description: result.msg\n            })\n        }\n    }\n\n    //删除信息\n    deleteRole = (index) => {\n\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <QuestionCircleOutlined/>,\n            content: '您确定删除此条内容吗？',\n            onOk: async () => {\n                var ids = new Array();\n                ids[0] = index;\n                const result = await reqRoleDelete(ids);\n                if (result.code === 200) {\n\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.getRoleList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    deleteBatch = () => {\n        Modal.confirm({\n            title: '提示',\n            okText: '确定',\n            cancelText: '取消',\n            icon: <QuestionCircleOutlined/>,\n            content: `您确定删除${this.state.selectedRowKeys.length}项吗？`,\n            onOk: async () => {\n\n                const ids = this.state.selectedRowKeys;\n\n                const result = await reqRoleDelete(ids);\n                if (result.code === 200) {\n                    notification.success({\n                        duration: 2,\n                        message: '提示',\n                        description: result.msg\n                    });\n                    this.setState({\n                        selectedRowKeys: []\n                    });\n                    this.getRoleList();\n\n                } else {\n                    notification.error({\n                        duration: null,\n                        message: '提示',\n                        description: result.msg\n                    })\n                }\n\n            }\n        })\n    }\n\n    resetSearch = async () => {\n        this.formRef.current.resetFields()\n        const result = await reqRoleList({pageNum: 1, pageSize: 10});\n        if (result.code === 200) {\n            const data = result.data;\n            // const data = result.data.records;\n            this.setState({list: data})\n        }\n    }\n\n    componentWillMount() {\n        this.initColumn();\n    }\n\n    componentDidMount() {\n        this.getRoleList();\n    }\n\n    render() {\n\n        // const {roleList, showStatus} = this.state;\n        // const title = (\n        //     <span>\n        //         <Button type=\"primary\" onClick={() => this.toggleVisible(1)}>新增</Button>\n        //     </span>\n        // )\n\n        const editData = this.editData;\n        const {list, selectedRowKeys, pagination, modalIsVisible, modalStatus} = this.state;\n\n\n        const rowSelection = {\n            selectedRowKeys: selectedRowKeys,\n            onChange: (selectedRowKeys) => this.setState({selectedRowKeys})\n        }\n\n        return (\n            <Card >\n                {/*<Table*/}\n                {/*    rowKey=\"id\"*/}\n                {/*    rowSelection={{type: \"checkout\"}}*/}\n                {/*    columns={this.columns}*/}\n                {/*    dataSource={roleList}/>*/}\n                <Table\n                    rowSelection={rowSelection}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                    dataSource={list}\n                    pagination={pagination}\n                    onChange={this.onTableChange}\n                    style={{marginTop: 10}}/>\n                {/*<RoleAdd visible={showStatus} toggleVisible={this.toggleVisible} onRefresh={this.getRoleList}/>*/}\n            </Card>\n        );\n    }\n}\n\nexport default Role;"]},"metadata":{},"sourceType":"module"}